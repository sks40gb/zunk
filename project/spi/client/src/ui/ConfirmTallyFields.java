/*
 * ConfirmTallyFields.java
 *
 * Created on August 8, 2008, 2:14 PM
 */

package ui;

import client.ClientTask;
import client.Global;
import client.TaskTallyProcess;
import com.lexpar.util.Log;
import common.msg.MessageConstants;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JTable;
import model.ConfirmTallyFieldModel;

/**
 * Class to Display Selected Field during ISO Sampling Process for Final Confirmation
 * before Doing the ISO Sampling
 *
 * @author  Prakasha
 */
final class ConfirmTallyFields extends javax.swing.JFrame implements MessageConstants{
    
    /** Creates new form ConfirmTallyFields */
    
    private Map<String,Boolean> fieldList;
    private Map<String,Boolean> tagList;
    private Map<String,Boolean> wordList;
    private ConfirmTallyFieldModel tallyFieldModel;
    private ProjectSelectionDialogForTally parent;
    private int projectId = 0;
    private int volumeId = 0;
    private String whichStatus;
    private String volumeName = "";
    private  Map<String,List> fieldName;
    private int batchId = 0;
    private JFrame projectSelectionDialog;
    
    
            
    public ConfirmTallyFields(Map<String,Boolean> fieldList, Map<String,Boolean> tagList, Map<String,Boolean> wordList, Map<String,List> fieldName,
        int projectId, int volumeId, String whichStatus) {
        setTitle("Confirm fields for Tally");
        this.fieldList = fieldList;
        this.tagList = tagList;
        this.wordList = wordList;
        this.projectId = projectId;
        this.volumeId = volumeId;
        this.fieldName = fieldName;
        this.whichStatus = whichStatus;
        initComponents();
        fillTallyTable(fieldList,fieldTallyTable);
        fillTallyTable(tagList, tagTallyTable);
        fillTallyTable(wordList, wordTallyTable);
    }

    private ConfirmTallyFields() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmTallyHeadingLabel = new javax.swing.JLabel();
        fieldTallyLabel = new javax.swing.JLabel();
        tagTallyLabel = new javax.swing.JLabel();
        wordTallyLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldTallyTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tagTallyTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        wordTallyTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        confirmTallyHeadingLabel.setText("Please Confirm to start Tally Operation");

        fieldTallyLabel.setText("1. Field Tally");

        tagTallyLabel.setText("2. Tag Tally");

        wordTallyLabel.setText("3. Word Tally");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 64));

        fieldTallyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "5/100"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(fieldTallyTable);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 64));

        tagTallyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "5/100"
            }
        ));
        jScrollPane2.setViewportView(tagTallyTable);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(452, 64));

        wordTallyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "5/100"
            }
        ));
        jScrollPane3.setViewportView(wordTallyTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(confirmTallyHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(fieldTallyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tagTallyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wordTallyLabel)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(confirmButton)
                        .addGap(89, 89, 89)
                        .addComponent(cancelButton)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(confirmTallyHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(fieldTallyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(tagTallyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(wordTallyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(cancelButton))
                .addGap(336, 336, 336))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-589)/2, (screenSize.height-750)/2, 589, 750);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
        parent.setVisible(true);
}//GEN-LAST:event_cancelButtonActionPerformed
    /**
     * Method to Create ISO Sampling, Get Invoked
     * when Confirm Buttton Clicked
     *
     * @param evt  java.awt.event.ActionEvent
     */
    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        try {
             
            final ClientTask task = new TaskTallyProcess(fieldName, projectId, volumeId);
            task.setCallback(new Runnable() {
                
                public void run() {
                    
                   Map tallyProcessDataMap = (Map) task.getResult();
                   DisplayTallyFieldGroup viewer = new DisplayTallyFieldGroup(getParentObject(), tallyProcessDataMap);                     
                    viewer.setTallyProcessDataMap(tallyProcessDataMap);
                    viewer.setVisible(true);
                    Global.mainWindow = viewer;
                    setVisible(false);
                    dispose();
                   
                }
            });
           task.enqueue(this);
       } catch (Throwable th) {
            Log.quit(th);
       }
    }//GEN-LAST:event_confirmButtonActionPerformed
    
    /**
     * Method to Get Parent Window
     * @return JDialog
     */
    public JDialog getParentObject(){
        return this.parent;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmTallyFields().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel confirmTallyHeadingLabel;
    private javax.swing.JLabel fieldTallyLabel;
    private javax.swing.JTable fieldTallyTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel tagTallyLabel;
    private javax.swing.JTable tagTallyTable;
    private javax.swing.JLabel wordTallyLabel;
    private javax.swing.JTable wordTallyTable;
    // End of variables declaration//GEN-END:variables
    
    /**
     * This method load the given Map data in given TallyTable
     * @param fieldNameList
     * @param tallyTable
     */
    private void fillTallyTable(Map<String,Boolean> fieldNameList, JTable tallyTable) {
        String headings[] = {"Name", "5/100"};
        Object object[][] = new Object[fieldNameList.size()][headings.length + 1];
        String tally_name = null;
        String isSampleFields = null;
        Set keySet = fieldNameList.keySet();
        Iterator keyIterate = keySet.iterator();
        int i = 0;
        while(keyIterate.hasNext()) {
            tally_name = keyIterate.next().toString(); 

            if(fieldNameList.get(tally_name)) {
                isSampleFields = "YES";
            }else {
                isSampleFields = "NO";
            }           

            object[i][0] = tally_name;            
            object[i][1] = isSampleFields; 
            i++;
        }


         tallyFieldModel = new ConfirmTallyFieldModel(object , headings);

         tallyTable.setModel(tallyFieldModel);
                         
    }
    
    public void setProjectSelectionDialog(JFrame projectSelectionDialog) {
        this.projectSelectionDialog = projectSelectionDialog;
    }
    
    public JFrame getProjectSelectionDialog() {
        return this.projectSelectionDialog;
    }
    
    public void setBatchId(int batchId) {
        this.batchId = batchId;
    }
    
    public int getBatchId() {
        return this.batchId;
    }
   
    public String getVolumeName() {
        return this.volumeName;
    }
    
    public void setVolumeName(String volumeName) {
        this.volumeName = volumeName;
    }
    
    public void setProjectId(int projectId) {
        this.projectId = projectId;
    }
    
    public int getProjectId() {
        return this.projectId;
    }
    
    public void setVolumeId(int volumeId) {
        this.volumeId = volumeId;
    }
    
    public int getVolumeId() {
        return this.volumeId;
    }
    
    public void setWhichStatus(String whichStatus) {
        this.whichStatus = whichStatus;
    }
   
    public String getWhichStatus() {
        return this.whichStatus;
    }
    
    public void setParent(ProjectSelectionDialogForTally parent) {
        this.parent = parent;
    }
    
    public ProjectSelectionDialogForTally getParent() {
        return this.parent;
    }
    
    public Map<String,Boolean> getFieldList() {
        return this.fieldList;
    }
    
    public void setFieldList(Map<String,Boolean> fieldList) {
        this.fieldList = fieldList;
    }
    
    public Map<String,Boolean> getTagList() {
        return this.tagList;
    }
    
    public void setTagList(Map<String,Boolean> tagList) {
        this.tagList = tagList;
    }
    
    public Map<String,Boolean> getWordList() {
        return this.wordList;
    }
    
    public void setWordList(Map<String,Boolean> wordList) {
        this.wordList = wordList;
    }
}
