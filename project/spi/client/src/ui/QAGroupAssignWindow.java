/*
 * QAGroupAssignWindow.java
 *
 * Created on August 21, 2008, 10:46 AM
 */

package ui;

import client.Global;
import client.TaskQAAssignUser;
import client.TaskQAGroup;
import client.TaskQAInspectionReport;
import client.TaskShowSampledDocument;
import com.lexpar.util.Log;
import common.CommonConstants;
import common.PopulateData;
import common.QAInspectionReportData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.QAGroupModel;
import model.QueryComboModel;
import model.SQLManagedComboModel;

/**
 * Class to Display List of QA Sampled Group for Selected Project and Volume
 * where user can pick for QAProofReading.
 *
 * @author  Prakasha
 */
public class QAGroupAssignWindow extends javax.swing.JFrame {
    
    /** Creates new form QAGroupAssignWindow */
    private ResultSet projectNameList;
    private SQLManagedComboModel projectModel = null;
    private QueryComboModel fieldModel = null;
    PopulateData data;
    private final String GET_ALL_PROJECTS = "qapr.getProjectNames";
    private final String GET_ALL_VOLUME = "qapr.getVolumeNames";
    private int projectId = 0;
    private int volumeId = 0;
    private String projectName = "";
    private String volumeName = "";
    private Map qaGroupResult = null;
    private QAGroupModel qamodel = null;
    private String samplingType = null;
    ActivitySelectionFrame parent = null;
    private boolean isAllDocCompleted = false;
    
    public QAGroupAssignWindow() {
        initComponents();
    }
    
    public QAGroupAssignWindow(ResultSet projectNameList,ActivitySelectionFrame parent) {
        this.projectNameList = projectNameList;
        this.parent = parent;
        initComponents();
        endQAProcessButton.setEnabled(false);
        okButton.setEnabled(false);
        tabSelected();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
		setTitle("QA Group Assignment");
        qaAssignmentPanel = new javax.swing.JPanel();
        qaPageSubPanelTwo = new javax.swing.JPanel();
        qaAssignmentPageHeadingLabel = new javax.swing.JLabel();
        volumeNameCombo = new javax.swing.JComboBox();
        projectNameCombo = new javax.swing.JComboBox();
        projectNameLabel = new javax.swing.JLabel();
        volumeNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        qaAssignmentTable = new javax.swing.JTable();
        qaPageSubPanelThree = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        endQAProcessButton = new javax.swing.JButton();
        viewDetailsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        qaAssignmentPageHeadingLabel.setFont(new java.awt.Font("Tahoma", 1, 13));
        qaAssignmentPageHeadingLabel.setText("QA ASSIGNMENT");

        volumeNameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[0]));
        volumeNameCombo.setPreferredSize(new java.awt.Dimension(150, 20));

        projectNameCombo.setPreferredSize(new java.awt.Dimension(150, 20));

		projectNameCombo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNameComboActionPerformed(evt);
            }
        });

		volumeNameCombo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeNameComboActionPerformed(evt);
            }
        });

        volumeNameCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {

            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }

            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }

            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                volumeNamePopupMenuWillBecomeVisible(evt);
            }
        });

        projectNameLabel.setText("Project Name ");

        volumeNameLabel.setText("Volume Name");

        javax.swing.GroupLayout qaPageSubPanelTwoLayout = new javax.swing.GroupLayout(qaPageSubPanelTwo);
        qaPageSubPanelTwo.setLayout(qaPageSubPanelTwoLayout);
        qaPageSubPanelTwoLayout.setHorizontalGroup(
            qaPageSubPanelTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qaPageSubPanelTwoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107)
                .addComponent(volumeNameLabel)
                .addGap(18, 18, 18)
                .addComponent(volumeNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qaPageSubPanelTwoLayout.createSequentialGroup()
                .addContainerGap(236, Short.MAX_VALUE)
                .addComponent(qaAssignmentPageHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
        );
        qaPageSubPanelTwoLayout.setVerticalGroup(
            qaPageSubPanelTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qaPageSubPanelTwoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(qaAssignmentPageHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(qaPageSubPanelTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLabel)
                    .addComponent(projectNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeNameLabel))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        qaAssignmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Group Number", "QA Level", "User Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
		
		

		qaAssignmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qaAssignmentTableMouseClicked(evt);
				
            }
        });

        
		jScrollPane1.setViewportView(qaAssignmentTable);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        endQAProcessButton.setText("End QA Process");
        endQAProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endQAProcessButtonActionPerformed(evt);
            }
        });

        viewDetailsButton.setText("View Details");
		viewDetailsButton.setEnabled(false);
        viewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout qaPageSubPanelThreeLayout = new javax.swing.GroupLayout(qaPageSubPanelThree);
        qaPageSubPanelThree.setLayout(qaPageSubPanelThreeLayout);
        qaPageSubPanelThreeLayout.setHorizontalGroup(
            qaPageSubPanelThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qaPageSubPanelThreeLayout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(okButton)
                .addGap(18, 18, 18)
                .addComponent(cancelButton)
                .addGap(18, 18, 18)
                .addComponent(endQAProcessButton)
                .addGap(18, 18, 18)
                .addComponent(viewDetailsButton)
                .addGap(99, 99, 99))
        );
        qaPageSubPanelThreeLayout.setVerticalGroup(
            qaPageSubPanelThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qaPageSubPanelThreeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(qaPageSubPanelThreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsButton)
                    .addComponent(endQAProcessButton)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout qaAssignmentPanelLayout = new javax.swing.GroupLayout(qaAssignmentPanel);
        qaAssignmentPanel.setLayout(qaAssignmentPanelLayout);
        qaAssignmentPanelLayout.setHorizontalGroup(
            qaAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qaAssignmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(qaAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qaPageSubPanelThree, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(qaPageSubPanelTwo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );
        qaAssignmentPanelLayout.setVerticalGroup(
            qaAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qaAssignmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(qaPageSubPanelTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(qaPageSubPanelThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(qaAssignmentPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This Method is called when the OkButton Clicked to 
     * assign the selected Group to user and Opens QAProofReading or ViewerForQA 
     * Window based on the Sampling Type
     * @param evt
     */
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = qaAssignmentTable.getSelectedRow();
        if(volumeId <= 0){
            JOptionPane.showMessageDialog(this, "Please select the volume");
            return;
        }
        if(selectedRow != -1) {
            
            //get the selected project id
            final int selectedGroupNumber = Integer.parseInt(qaAssignmentTable.getValueAt(selectedRow, 0).toString());
            String qaStatus = qaAssignmentTable.getValueAt(selectedRow, 3).toString();
            String userName = qaAssignmentTable.getValueAt(selectedRow, 2).toString().trim();
            final JFrame object = this;
            
            if(null != qaStatus && qaStatus.equals(CommonConstants.STATUS_IDLE) || (qaStatus.equals(CommonConstants.STATUS_INUSE) && userName.equals(Global.theServerConnection.getUserName()))) {
                final TaskQAAssignUser tallytask = new TaskQAAssignUser(Global.theServerConnection.getUserName(),selectedGroupNumber, volumeId);
           
                    tallytask.setCallback((new Runnable() {

                    public void run() {
                        List result = (List)tallytask.getResult();
                        String errorStatus = result.get(0).toString();
                        samplingType = result.get(1).toString();
                        
                        if(errorStatus.equals(CommonConstants.STATUS_FAIL)) {
                            JOptionPane.showMessageDialog(object,"This Group has Already been Selected");
                            setQAGroupValues();
                        }else if(errorStatus.equals(CommonConstants.SAMPLING_RESULT_REJECT)) {
                            JOptionPane.showMessageDialog(object,"This Volume has been Rejected");
                        }
                        else if(errorStatus.equals(CommonConstants.SAMPLING_RESULT_ACCEPT)){
                            
                            if(null != samplingType) {
                                if(samplingType.equals("Field Sampling - Field Display") || samplingType.equals("Document Sampling - Field Display") || 
                                        samplingType.equals("Field Sampling") || samplingType.equals(CommonConstants.QA_SAMPLING_CHARACTER)) {

                                    openQAProofReading(CommonConstants.SAMPLINGTYPE_FIELD_DISPLAY,selectedGroupNumber);
                                }else if(samplingType.equals("Field Sampling - Tag Display") || samplingType.equals("Document Sampling - Tag Display")) {
                                    openQAProofReading(CommonConstants.SAMPLINGTYPE_TAG_DISPLAY,selectedGroupNumber);
                                }
                            }
                            
                        }else {
                            //invalid error type
                        }
                    }
                }));
                tallytask.enqueue(this);
            
            }else if(null != qaStatus && qaStatus.equals("In Use")) {
                //throw alert
                JOptionPane.showMessageDialog(this,
                        "Group already in use");
            }else if(null != qaStatus && qaStatus.equals("Completed")) {
                //throw alert
                JOptionPane.showMessageDialog(this,
                        "Group is already Completed");
            }
        
            
        }else {
                    JOptionPane.showMessageDialog(this, "Please select any group.");
        }
        
}//GEN-LAST:event_okButtonActionPerformed

    private void endQAProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endQAProcessButtonActionPerformed
       endQAProcessButton.setEnabled(false);
       final QAGroupAssignWindow parent = this;
       final TaskQAInspectionReport task = new TaskQAInspectionReport(projectId, volumeId);   
        task.setCallback(new Runnable()
        {
            public void run()
            {
             try {
                    QAIRDialog qair_dialog = new QAIRDialog(parent, true,projectId,volumeId,(QAInspectionReportData)task.getResult());
                    qair_dialog.setLocationRelativeTo(null);
                    qair_dialog.setVisible(true);   
                 } catch (Exception ex) {
                   ex.printStackTrace();                        
                }

               }
        });
        task.enqueue(this);  
           
}//GEN-LAST:event_endQAProcessButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        parent.setVisible(true);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void viewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsButtonActionPerformed
        /*JDialog JAboutDialog1 = new JDialog(this);
        JAboutDialog1.setModal(true);
        JAboutDialog1.setTitle("View Project Details");
        JAboutDialog1.setPreferredSize(new Dimension(400,400));
        JAboutDialog1.add(new JLabel("Projects Fields :"));
        JAboutDialog1.show();*/
        ShowProjectDetails projectDetails = new ShowProjectDetails(this,true,projectId,volumeId);
        projectDetails.setVisible(true);
    }//GEN-LAST:event_viewDetailsButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QAGroupAssignWindow().setVisible(true);
            }
        });
    }
    
    private String[] loadProjectNameList(ResultSet projectNameList) {
        
        List<String> nameList = new ArrayList<String>();
        try {
             while(projectNameList.next()) {
                nameList.add(projectNameList.getString(1));
            }
        }catch(SQLException se) {
            
        }
       return nameList.toArray(new String[nameList.size()]);
    }
    
        protected void tabSelected() {
        Log.print("Tally Button selected");
        endQAProcessButton.setEnabled(false);
        // project model
        projectModel = new SQLManagedComboModel(GET_ALL_PROJECTS);
        projectModel.register();
        projectNameCombo.setModel(projectModel);
        data = new PopulateData();
    }

    private void projectNameComboActionPerformed(java.awt.event.ActionEvent evt) {
        //Log.print("(PopulatePage.projectComboActionPerformed) " + evt.getActionCommand());

        if (data != null) {
            projectName = data.project_name;
        }
        int sel = projectNameCombo.getSelectedIndex();
        if (sel > -1) {
            data.project_name = (String) projectModel.getElementAt(sel);
            projectId = ((SQLManagedComboModel) projectNameCombo.getModel()).getIdAt(sel);
            if (fieldModel != null) {
                if (!projectName.equals(data.project_name)) { // changed here
                    volumeNameCombo.setSelectedIndex(-1);
                } // changed here
            }
            volumeNameCombo.setEnabled(true);
        } else {
            data.project_name = "";
            projectId = 0;
            volumeNameCombo.setEnabled(false);
        }
    }

    private void volumeNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        //Log.print("(PopulatePage.volumeComboPopupMenuWillBecomeVisisble) projectId " + projectId);
        fieldModel = new QueryComboModel(GET_ALL_VOLUME, /* required? */ false, new String[]{Integer.toString(projectId)}, "");

        volumeNameCombo.setModel(fieldModel);
    }

    private void volumeNameComboActionPerformed(java.awt.event.ActionEvent evt) {
        int sel = volumeNameCombo.getSelectedIndex();
            if (sel > -1) {
                data.field_names = (String) fieldModel.getElementAt(sel);
                // data.standard_field_validations = (String)fieldModel.getElementAt(sel);
                volumeId = fieldModel.getIdAt(sel);
                if(volumeId > -1) {
                  setQAGroupValues();
                  viewDetailsButton.setEnabled(true);
                }else {
                    viewDetailsButton.setEnabled(false);
                }
            }
        
    }
    
    public void fillQAGroupTable() {
        
        boolean isDocCompleted = true;
        //if the groupresult is null or empty then set isDocCompleted to false
        if(null == qaGroupResult || qaGroupResult.size() == 0) {
            isDocCompleted = false;
        }
        
        String volumeStatus = "";
                
        if(null != qaGroupResult && qaGroupResult.size() != 0) {
            
            volumeStatus = qaGroupResult.get("VolumeStatus").toString();
            
            String headings[] = {"Group Number", "QA Level", "User Name", "Status"};
            Object object[][] = new Object[qaGroupResult.size() - 1][headings.length+1];
            Set keySet = qaGroupResult.keySet();
            Iterator it = keySet.iterator();
            int i = 0;
            while(it.hasNext()) {
                
                Object nextValue = it.next();
                if(qaGroupResult.get(nextValue).getClass().getSimpleName().equals("ArrayList")) {
                    List valueList = (List)qaGroupResult.get(nextValue);
                    object[i][0] = valueList.get(0);
                    object[i][1] = valueList.get(1);
                    object[i][2] = valueList.get(2);
                    object[i][3] = valueList.get(3);
                    if(!valueList.get(3).toString().equals(CommonConstants.STATUS_COMPLETED)) {
                        isDocCompleted = false;
                    }
                    i++; 
                }
                
            }

             qamodel = new QAGroupModel(object , headings);
             qaAssignmentTable.setModel(qamodel); 
            } 
        isAllDocCompleted = isDocCompleted;
        
        if(null != volumeStatus && volumeStatus.equals(CommonConstants.SAMPLING_RESULT_REJECT)) {
                endQAProcessButton.setEnabled(true);
        }else {
            setEndQAProcessButtonEnabled();
        }
    }
    
    public void setQAGroupValues() {
        final TaskQAGroup task = new TaskQAGroup(volumeId);   
        task.setCallback(new Runnable()
        {
            public void run()
            {
             try {
                    qaGroupResult = (Map)task.getResult();
                    fillQAGroupTable();
                 } catch (Exception ex) {
                   ex.printStackTrace();                        
                }

               }
        });
        task.enqueue(this);  
                
    }
    
    private void openQAProofReading(String samplingType, int selectedGroupId) {
       
       final int groupNo = selectedGroupId;
       final QAGroupAssignWindow qaGroupAssignWindow = this;
       final String sType = samplingType;
       final String pName = projectName;
       final JFrame parent = this.parent;
       final TaskShowSampledDocument taskShowSampledDocument = new TaskShowSampledDocument(projectId, volumeId, selectedGroupId);
        taskShowSampledDocument.setCallback((new Runnable() {

            public void run() {
                QAProofReadingpage qaProofReadingpage = QAProofReadingpage.
                        getInstance((Map)taskShowSampledDocument.getResult(), projectId, volumeId,groupNo,pName,sType
                        ,qaGroupAssignWindow, parent);

                setVisible(false);
                qaProofReadingpage.setVisible(true);
               
            }
        }));
        taskShowSampledDocument.enqueue(this);
        
       
    }
    
    private void openViewerForQA(String samplingType, int selectedGroupId) {
        SplitPaneViewer splitPaneViewer = SplitPaneViewer.getInstance();
        setVisible(false);
        splitPaneViewer.setVisible(true);
    }
    
    /**
     * 
     */
    private void setEndQAProcessButtonEnabled() {
        if(isAllDocCompleted) {
            endQAProcessButton.setEnabled(true);
        }else {
            endQAProcessButton.setEnabled(false);
        }
    }
    
    /**
     * This method get called when mouse click action performed on 
     * qaAssignmentTable
     * @param evt - MouseEvent
     */
    private void qaAssignmentTableMouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = qaAssignmentTable.getSelectedRow();
        String userName = qaAssignmentTable.getValueAt(selectedRow, 2).toString();
        String groupStatus = qaAssignmentTable.getValueAt(selectedRow, 3).toString();
        /**
        *if the groupStatus is Idle or (In Use and Assigned to Current loged user)
         * Enable the ok button else disable the ok button
        */
        System.out.println("groupStatus:"+groupStatus);
        if(null != groupStatus) {
            if(groupStatus.equals(CommonConstants.STATUS_IDLE) || 
                    (groupStatus.equals(CommonConstants.STATUS_INUSE)
                    && null != userName && userName.trim().equals(Global.theServerConnection.getUserName()))) {
                okButton.setEnabled(true);
            }else {
                okButton.setEnabled(false);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton endQAProcessButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox projectNameCombo;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JLabel qaAssignmentPageHeadingLabel;
    private javax.swing.JPanel qaAssignmentPanel;
    private javax.swing.JTable qaAssignmentTable;
    private javax.swing.JPanel qaPageSubPanelThree;
    private javax.swing.JPanel qaPageSubPanelTwo;
    private javax.swing.JButton viewDetailsButton;
    private javax.swing.JComboBox volumeNameCombo;
    private javax.swing.JLabel volumeNameLabel;
    // End of variables declaration//GEN-END:variables
    
}
