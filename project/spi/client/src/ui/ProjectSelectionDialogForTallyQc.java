/*
 * QAgroupassignpage.java
 *
 * Created on August 19, 2008, 4:33 PM
 */
package ui;

import common.Log;
import javax.swing.JFrame;
import org.w3c.dom.Element;
import client.ClientTask;
import client.Global;
import client.ServerConnection;
import client.TaskExecuteQuery;
import client.TaskExecuteUpdate;
import client.TaskOpenBatch;
import client.TaskTallyAssignUser;
import common.PopulateData;
import common.msg.MessageConstants;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import model.CommonTableModel;
import model.QueryComboModel;
import model.SQLManagedComboModel;

/**
 *
 * @author  Prakasha
 */
public class ProjectSelectionDialogForTallyQc extends javax.swing.JDialog implements MessageConstants {

    private final String GET_ALL_PROJECTS = "AdvanceValidation.projectCombo";
    private final String GET_ALL_VOLUME = "listing.get volume";
    private final String GET_TALLY_ASSIGNED_TO_USER = "TallyQC.getTallyQcAssigned";
    private final String UPDATE_TALLY_ASSIGNMENT = "TallyQC.updateAssignment";
    private final String TALLY_ASSIGNMENT_TO_USER = "TallyQC.assignGroupToUser";
    private final String GET_ASSIGNED_GROUP = "TallyQC.getQcGroupAssign";
    private final String IDLE = "Idle";
    private SQLManagedComboModel projectModel;
    private QueryComboModel volumeModel;
    private PopulateData data;
    private String status;
    private int userId;
    private int group_number;
    private int projectId;
    private int volumeId;
    private int tally_assignment_id;
    private boolean isInsertProcess;
    private Object object[][];
    private JFrame parent;
    private boolean isAssigned;
    private int tally_dictionary_group_id;
    private String errorStatus = null;

    /**
     * For creating new object
     * @param parent -- parent window 
     * @param userId -- user id 
     * @param whichStatus -- status (Taly, Listing, Tall QC etc )
     */
    ProjectSelectionDialogForTallyQc(JFrame parent, int userId, String whichStatus) {
        this.parent = parent;
        this.userId = userId;
        this.status = whichStatus;
        isAssigned = false;
        data = new PopulateData();
        isInsertProcess = false;
        init();
    }

    /**
     * Inistializing the required data
     * Checking whether the user is assigned a group for the Tally Qc or not
     * If a field group is assigned to the user then display the Project name
     * and volume name else provide combobox for selecting the project and volume.
     * 
     */
    private void init() {
        final ClientTask task = new TaskExecuteQuery(GET_TALLY_ASSIGNED_TO_USER, Integer.toString(userId), "Assigned");
        task.setCallback(new Runnable() {

            public void run() {
                ResultSet results = (ResultSet) task.getResult();
                try {
                    if (results.next()) {
                        isAssigned = true;
                        projectId = results.getInt(1);
                        volumeId = results.getInt(2);
                        data.project_name = results.getString(3);
                        data.volume_name = results.getString(4);
                        data.field_names = results.getString(5);
                        tally_assignment_id = results.getInt(6);
                        group_number = results.getInt(7);
                    } else {
                        isAssigned = false;
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                //after getting the result from the server side initialize window
                //component.
                initComponents();
                projectLabel.setText(data.project_name);
                volumeLabel.setText(data.volume_name);
                tabSelected();
                setLocationRelativeTo(parent);
                okButton.setEnabled(false);
                //if group is assigned to the user.
                if (isAssigned) {
                    fillAssignedTallyTable();
                    assignmentLabel.setForeground(Color.BLACK);
                    assignmentLabel.setText("Click Ok to open assigned group " + " : " + group_number);
                    fieldsTable.setSelectionMode(1);
                    okButton.setEnabled(true);
                }
            }
        });
        task.enqueue(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
private void initComponents() {

qaHeaderLabel = new javax.swing.JLabel();
jScrollPane1 = new javax.swing.JScrollPane();
fieldsTable = new javax.swing.JTable();
okButton = new javax.swing.JButton();
jPanel1 = new javax.swing.JPanel();
projectNameLabel = new javax.swing.JLabel();
projectComboBox = new javax.swing.JComboBox();
volumeNameLabel = new javax.swing.JLabel();
volumeComboBox = new javax.swing.JComboBox();
jButton1 = new javax.swing.JButton();
assignmentLabel = new javax.swing.JLabel();
volumeLabel = new javax.swing.JLabel();
projectLabel = new javax.swing.JLabel();

setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
addWindowListener(new java.awt.event.WindowAdapter() {
public void windowClosing(java.awt.event.WindowEvent evt) {
formWindowClosing(evt);
}
});
setTitle("Do Tally");
qaHeaderLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 16));
qaHeaderLabel.setText("Tally");

fieldsTable.setModel(new javax.swing.table.DefaultTableModel(
	new Object [][] {
		
	},
	new String [] {
		"Group Number", "User Name", "Status"
	}
) {
	boolean[] canEdit = new boolean [] {
		false, false, false
	};

	public boolean isCellEditable(int rowIndex, int columnIndex) {
		return canEdit [columnIndex];
	}
});
fieldsTable.addMouseListener(new java.awt.event.MouseAdapter() {
public void mouseClicked(java.awt.event.MouseEvent evt) {
fieldsTableMouseClicked(evt);
}
});
jScrollPane1.setViewportView(fieldsTable);

okButton.setText("Ok");
okButton.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
okButtonActionPerformed(evt);
}
});

projectNameLabel.setText("Project :");

projectComboBox.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
projectComboBoxActionPerformed(evt);
}
});

volumeNameLabel.setText("Volume :  ");

volumeComboBox.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
volumeComboBoxActionPerformed(evt);
}
});

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
jPanel1.setLayout(jPanel1Layout);
if(! isAssigned){
jPanel1Layout.setHorizontalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addContainerGap()
.addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(projectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
.addComponent(volumeNameLabel)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(volumeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
);
jPanel1Layout.setVerticalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(volumeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(volumeNameLabel)
.addComponent(projectNameLabel)
.addComponent(projectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
);
}else{
jPanel1Layout.setHorizontalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addContainerGap()
.addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
.addComponent(volumeNameLabel)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
);
jPanel1Layout.setVerticalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(volumeNameLabel)
.addComponent(projectNameLabel)
.addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
);
}

jButton1.setText("Cancel");
jButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton1ActionPerformed(evt);
}
});

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
getContentPane().setLayout(layout);
layout.setHorizontalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addContainerGap()
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addComponent(qaHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(250, 250, 250))
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addContainerGap())))
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addContainerGap()
.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
.addContainerGap())
.addGroup(layout.createSequentialGroup()
.addGap(205, 205, 205)
.addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(41, 41, 41)
.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap(211, Short.MAX_VALUE))
.addGroup(layout.createSequentialGroup()
.addContainerGap()
.addComponent(assignmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap(211, Short.MAX_VALUE))
);
layout.setVerticalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addComponent(qaHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(7, 7, 7)
.addComponent(assignmentLabel)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jButton1)
.addComponent(okButton))
.addContainerGap())
);

pack();
}// </editor-fold>                        

private void projectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                
    //Log.print("(PopulatePage.volumeComboPopupMenuWillBecomeVisisble) projectId " + projectId);

    int sel = projectComboBox.getSelectedIndex();
    if (sel > -1) {
        data.project_name = (String) projectModel.getElementAt(sel);
        projectId = ((SQLManagedComboModel) projectComboBox.getModel()).getIdAt(sel);
        volumeComboBox.setEnabled(true);
    } else {
        data.project_name = "";        
        volumeComboBox.setEnabled(false);
    }
    // get volumes for the project
    volumeModel = new QueryComboModel(GET_ALL_VOLUME, false, new String[]{Integer.toString(projectId)}, "");
    volumeComboBox.setModel(volumeModel);
}                                               

/**
 * close the current window and open the main window.
 * @param evt
 */
private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
    exit();
}                                  

/**
 * After selecting the group open the SplitpaneViewer for tally QC process.
 * and update the group assignment to the user. 
 * @param evt
 */
private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
//    ServerConnection scon = Global.theServerConnection;
//    String param[] = new String[3];
//    param[0] = Integer.toString(userId);
//    param[1] = "Assigned";    
//    ClientTask task = null;
//    if(isInsertProcess){
//        param[2] = Integer.toString(tally_dictionary_group_id);
//        task = new TaskExecuteUpdate(TALLY_ASSIGNMENT_TO_USER, param);
//    }else{
//        param[2] = Integer.toString(tally_assignment_id);
//        task = new TaskExecuteUpdate(UPDATE_TALLY_ASSIGNMENT, param);
//    }
//    //final ClientTask task = new TaskExecuteQuery("tally.getQaGroupAssign", scon.getUserName(), Integer.toString(volumeId));
//    task.setCallback(new Runnable() {
//        public void run() {
//            openSplitPaneViewer();
//        }
//    });
//    task.enqueue(this);
    
//    ServerConnection scon = Global.theServerConnection;
         
    final TaskTallyAssignUser tallytask = new TaskTallyAssignUser(isInsertProcess,userId, tally_dictionary_group_id,tally_assignment_id);
           
                    tallytask.setCallback((new Runnable() {

                    public void run() {
                      //  errorStatus = (String)tallytask.getResult();
                        String reply[] =  (String[]) tallytask.getResult();
                        errorStatus = reply[0];
                        tally_assignment_id = Integer.parseInt(reply[1]);
                        if (errorStatus.equals("pass")){
                            JOptionPane.showMessageDialog(null,"This Group has Already been Selected");
                            fillAssignedTallyTable();
                        }else{
                            openSplitPaneViewer();
                        }
                            
                    } 
                }));
                tallytask.enqueue(this);
        
}                                        


    private void openSplitPaneViewer() {
        try {
            final ClientTask task = new TaskOpenBatch(userId, "TallyQC", data.field_names);
            task.setCallback(new Runnable() {

                public void run() {
                    Element reply = (Element) task.getResult();
                    String action = reply.getNodeName();                    
                    SplitPaneViewer viewer = SplitPaneViewer.getInstance();
                    String splitDocuments = reply.getAttribute(A_SPLIT_DOCUMENTS);
                    viewer.setParent(parent);
                    viewer.setFieldName(data.field_names);
                    viewer.setVolume(data.volume_name);
                    viewer.setProjectName(data.project_name);
                    viewer.setTallyAssignementId(tally_assignment_id,tally_dictionary_group_id);
                    viewer.setVolumeId(volumeId);
                    viewer.initializeForProject("", projectId,
                            "TallyQC", splitDocuments);
                    viewer.removeViewPanel();
                    // Open the viewer.  This instance of the viewer becomes
                    // the main window, for error pop-ups
                    viewer.setVisible(true);
                    Global.mainWindow = viewer;
                    // close the dialog without showing the parent
                    // TBD: this is strange coding - worry about restructuring it
                    setVisible(false);
                    dispose();
                }
            });
            task.enqueue(this);
        } catch (Throwable th) {
            Log.quit(th);
        }
    }

    
    /**
     * Get the field groups corresponding to the user and volume.
     * @param evt
     */
private void volumeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                               
    int sel = volumeComboBox.getSelectedIndex();
    if (sel > 0) {
        data.volume_name = (String) volumeModel.getElementAt(sel);
        volumeId = ((QueryComboModel) volumeComboBox.getModel()).getIdAt(sel);
        fillAssignedTallyTable();
    }
}                                              

/**
 * Put the assignment record (like group number, user, status for the group ) to 
 * the table. 
 */
    private void fillAssignedTallyTable() {
        //get the tally record (group_number, user, status) for the volume from the db       
        final ClientTask task = new TaskExecuteQuery(GET_ASSIGNED_GROUP ,Integer.toString(projectId), Integer.toString(volumeId));
        task.setCallback(new Runnable() {
            public void run() {
                ResultSet results = (ResultSet) task.getResult();
                if (results != null) {
                    feedDataToTallyTable(results);
                } else {
                    Log.print("??? Defaults: null resultset returned");
                }
            }
        });
        task.enqueue(this);
    }

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    exit();
}                                        

/**
 * User will Select a fields group if user is not assigned any group
 * @param evt
 */
private void fieldsTableMouseClicked(java.awt.event.MouseEvent evt) {      
    if (evt.getClickCount() >= 1 && !isAssigned) {
        int selectedIndex = fieldsTable.getSelectedRow();
        isInsertProcess = false;
        try{
            tally_dictionary_group_id = Integer.parseInt((String) object[selectedIndex][5].toString());            
            tally_assignment_id = Integer.parseInt((String) object[selectedIndex][4].toString());            
        }catch(NumberFormatException nfe){
            isInsertProcess =true;
        }
        data.field_names = (String) object[selectedIndex][3];
        String _status = (String) fieldsTable.getValueAt(selectedIndex, 2);        
        if (_status == null || _status.equalsIgnoreCase("Idle") || _status.equalsIgnoreCase("")) {
            okButton.setEnabled(true);
        } else {
            okButton.setEnabled(false);
        }
    }
}                                        

    /**
     * exit the current window 
     */
    private void exit() {
        dispose();
        parent.setVisible(true);
    }

    //setTitle("Project Selection");
    protected void tabSelected() {
        Log.print("Tally QC Button selected");
        // project model
        projectModel = new SQLManagedComboModel(GET_ALL_PROJECTS);
        projectModel.register();
        projectComboBox.setModel(projectModel);
    }

    /**
     * Put the data to the Tally Qc table
     * @param rs
     */
    private void feedDataToTallyTable(ResultSet rs) {
        int size = 1;
        try {
            
            //if there is no group for the selected project and volume.
            if(! rs.next()){
                 JOptionPane.showMessageDialog(this, "This volume does not have any batch group");
                 return;
            }
            
            //get the total no. of rows
            while (rs.next()) {
                size++;
            }
            //make ResultSet point to the first record.
            while (rs.previous()) {
            }
            object = new Object[size][6];
            int i = 0;
            while (rs.next()) {
                //group number
                object[i][0] = rs.getString(1);
                //user name
                object[i][1] = rs.getString(2) == null ? "" : rs.getString(2);
                //if the <code>status</code> is null or equals to <code>""</code> then make it "Idle".
                object[i][2] = rs.getString(3) == null || rs.getString(3).equals("") ? IDLE : rs.getString(3);
                //field name
                object[i][3] = rs.getString(4) == null ? "" : rs.getString(4);
                //tally assignment id
                object[i][4] = rs.getString(5) == null ? "" : rs.getString(5);
                //tally dictionary group id
                object[i][5] = rs.getString(6) == null ? "" : rs.getString(6);
                i++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        fieldsTable.setModel(new CommonTableModel(object, new String[]{"Group Number", "User Name", "Status"}));
    }

// Variables declaration - do not modify                     
private javax.swing.JLabel assignmentLabel;
private javax.swing.JTable fieldsTable;
private javax.swing.JButton jButton1;
private javax.swing.JPanel jPanel1;
private javax.swing.JScrollPane jScrollPane1;
private javax.swing.JButton okButton;
private javax.swing.JComboBox projectComboBox;
private javax.swing.JLabel projectNameLabel;
private javax.swing.JLabel qaHeaderLabel;
private javax.swing.JComboBox volumeComboBox;
private javax.swing.JLabel volumeNameLabel;
private javax.swing.JLabel volumeLabel;
private javax.swing.JLabel projectLabel;

// End of variables declaration                   
}

