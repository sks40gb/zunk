/*
 * DTYGMod.java
 *
 * Created on June 4, 2008, 6:20 PM
 */
package ui;

import client.TaskExecuteQuery;
import common.DTYGFieldsData;
import export.DTYGXlsReaderWriter;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileFilter;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 * 
 * @author  sunil
 */
public class DTYGMod extends javax.swing.JFrame {

    private ArrayList<DTYGFieldsData> dtygDataList;
    private DTYGXlsReaderWriter xlsReader;
    private JFrame parent;
    private final String LOCK = "Lock";
    private DTYGMod parentFrame = this;
    private String lfpFilePath;
    private String xeroxFilePath;
    private File xeroxFile;
    private String modifiedXeroxFilePath;
    public static String project;
    public static String user_id;
    private List values;

    /** Creates new form DTYGMod */
    public DTYGMod() {
        initComponents();
        fillValuesInArray();
        jPanel6.setBorder(new RoundedBorder(30));
        jPanel4.setBorder(new RoundedBorder(30));
        jPanel7.setBorder(new RoundedBorder(10));
    }

    public DTYGMod(JFrame parent) {
        this.parent = parent;
        initComponents();
        fillValuesInArray();
        jPanel6.setBorder(new RoundedBorder(30));
        jPanel4.setBorder(new RoundedBorder(30));
        jPanel7.setBorder(new RoundedBorder(10));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        parentPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        browsePanel = new javax.swing.JPanel();
        xeroxLabel = new javax.swing.JLabel();
        LFPLabel = new javax.swing.JLabel();
        designatedDirectoryLabel = new javax.swing.JLabel();
        LFPTextField = new javax.swing.JTextField();
        designatedDirectoryTextField = new javax.swing.JTextField();
        LFPBrowseButton = new javax.swing.JButton();
        xeroxBrowseButton = new javax.swing.JButton();
        designatedDirectoryBrowseButton = new javax.swing.JButton();
        xeroxTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        projectNameLabel = new javax.swing.JLabel();
        projectTextField = new javax.swing.JTextField();
        collectionTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        GPDICRadioButton = new javax.swing.JRadioButton();
        LDPCRadioButton = new javax.swing.JRadioButton();
        level2Label = new javax.swing.JLabel();
        collectionNameLabel = new javax.swing.JLabel();
        enableAutopushCheckBox = new javax.swing.JCheckBox();
        modifiedJobnameLabel = new javax.swing.JLabel();
        processButton = new javax.swing.JButton();
        xeroxProgressBar = new javax.swing.JProgressBar();
        footerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(219, 229, 249));
        setForeground(java.awt.Color.green);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        parentPanel.setBackground(new java.awt.Color(219, 229, 249));
        parentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        parentPanel.setForeground(new java.awt.Color(219, 229, 249));

        jPanel3.setBackground(new java.awt.Color(217, 246, 214));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setBackground(java.awt.Color.lightGray);
        jLabel1.setOpaque(true);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/spica.jpg")));

        browsePanel.setBorder(null);
        browsePanel.setOpaque(false);

        xeroxLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        xeroxLabel.setText("ENTER XEROX FILE");

        LFPLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        LFPLabel.setText("ENTER JOBNAME.LFP");

        designatedDirectoryLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        designatedDirectoryLabel.setText("DESIGNATED DIRECTORY TO PUSH FILES INTO :");

        LFPTextField.setBackground(new java.awt.Color(219, 229, 249));
        LFPTextField.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        LFPTextField.setForeground(new java.awt.Color(255, 0, 0));

        designatedDirectoryTextField.setBackground(new java.awt.Color(219, 229, 249));
        designatedDirectoryTextField.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        designatedDirectoryTextField.setForeground(new java.awt.Color(255, 0, 0));

        LFPBrowseButton.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        LFPBrowseButton.setText("BROWSE...");
        LFPBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LFPBrowseButtonActionPerformed(evt);
            }
        });

        xeroxBrowseButton.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        xeroxBrowseButton.setText("BROWSE...");
        xeroxBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xeroxBrowseButtonActionPerformed(evt);
            }
        });

        designatedDirectoryBrowseButton.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        designatedDirectoryBrowseButton.setText("BROWSE...");
        designatedDirectoryBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designatedDirectoryBrowseButtonActionPerformed(evt);
            }
        });

        xeroxTextField.setBackground(new java.awt.Color(219, 229, 249));
        xeroxTextField.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        xeroxTextField.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout browsePanelLayout = new javax.swing.GroupLayout(browsePanel);
        browsePanel.setLayout(browsePanelLayout);
        browsePanelLayout.setHorizontalGroup(
            browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browsePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xeroxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LFPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(designatedDirectoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(browsePanelLayout.createSequentialGroup()
                        .addGroup(browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(designatedDirectoryTextField)
                            .addComponent(LFPTextField)
                            .addComponent(xeroxTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(xeroxBrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LFPBrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(designatedDirectoryBrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        browsePanelLayout.setVerticalGroup(
            browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browsePanelLayout.createSequentialGroup()
                .addGroup(browsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(browsePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(xeroxBrowseButton, 0, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(LFPBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(designatedDirectoryBrowseButton, 0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, browsePanelLayout.createSequentialGroup()
                        .addComponent(xeroxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xeroxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LFPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LFPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(designatedDirectoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(designatedDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel5.setBorder(null);
        jPanel5.setOpaque(false);

        jPanel6.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));
        jPanel6.setOpaque(false);

        jPanel4.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));
        jPanel4.setOpaque(false);

        projectNameLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        projectNameLabel.setText("PROJECT NAME");

        projectTextField.setBackground(new java.awt.Color(219, 229, 249));
        projectTextField.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        projectTextField.setForeground(new java.awt.Color(255, 0, 0));

        collectionTextField.setBackground(new java.awt.Color(219, 229, 249));
        collectionTextField.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        collectionTextField.setForeground(new java.awt.Color(255, 0, 0));

        jPanel7.setBackground(new java.awt.Color(219, 229, 249));
        jPanel7.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));

        GPDICRadioButton.setBackground(new java.awt.Color(219, 229, 249));
        buttonGroup1.add(GPDICRadioButton);
        GPDICRadioButton.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        GPDICRadioButton.setText("GPDIC");

        LDPCRadioButton.setBackground(new java.awt.Color(219, 229, 249));
        buttonGroup1.add(LDPCRadioButton);
        LDPCRadioButton.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        LDPCRadioButton.setText("LDPC");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GPDICRadioButton)
                    .addComponent(LDPCRadioButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GPDICRadioButton)
                .addGap(11, 11, 11)
                .addComponent(LDPCRadioButton)
                .addContainerGap())
        );

        level2Label.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        level2Label.setForeground(java.awt.Color.red);
        level2Label.setText("LEVEL2");

        collectionNameLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        collectionNameLabel.setText("COLLECTION NAME\\PREFIX:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(collectionTextField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(projectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(collectionNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(level2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLabel)
                    .addComponent(level2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(projectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(collectionNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(collectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addContainerGap())
        );

        enableAutopushCheckBox.setBackground(new java.awt.Color(217, 246, 214));
        enableAutopushCheckBox.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        enableAutopushCheckBox.setForeground(new java.awt.Color(255, 12, 59));
        enableAutopushCheckBox.setText("PLEASE CHECK TO ENABLE AUTOPUSH :");
        enableAutopushCheckBox.setOpaque(true);
        enableAutopushCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableAutopushCheckBoxActionPerformed(evt);
            }
        });

        modifiedJobnameLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        modifiedJobnameLabel.setText("MODIFIED JOBNAME\\BATCHNAME");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(modifiedJobnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(enableAutopushCheckBox)))
                .addGap(85, 85, 85))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(enableAutopushCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifiedJobnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        processButton.setBackground(new java.awt.Color(219, 229, 249));
        processButton.setText("PROCCESS");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xeroxProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(browsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(browsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xeroxProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 12, Short.MAX_VALUE))
        );

        footerLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        footerLabel.setForeground(java.awt.Color.red);
        footerLabel.setText("IDLE");

        javax.swing.GroupLayout parentPanelLayout = new javax.swing.GroupLayout(parentPanel);
        parentPanel.setLayout(parentPanelLayout);
        parentPanelLayout.setHorizontalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(footerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        parentPanelLayout.setVerticalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerLabel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void enableAutopushCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableAutopushCheckBoxActionPerformed
}//GEN-LAST:event_enableAutopushCheckBoxActionPerformed

    /**
     * Browes to select the  LFP file
     * File filter is used so that only file having extension lfp can be selected.
     * @param evt
     */
private void LFPBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LFPBrowseButtonActionPerformed
    FileFilter filter = new FileFilter() {

        public String getDescription() {
            return "XLS Files (*.LFP)";
        }

        public boolean accept(File file) {
            if (file.isDirectory()) {
                return true;

            } else if (file.isFile()) {
                if (file.getName().toUpperCase().endsWith("LFP")) {
                    return true;
                }
            }
            return false;
        }
    };
    //file filter
    chooseFile = new JFileChooser();
    chooseFile.setFileFilter((javax.swing.filechooser.FileFilter) filter);
    int returnVal = chooseFile.showOpenDialog(this);

    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = chooseFile.getSelectedFile();
        LFPTextField.setText(file.getPath());
    }
}//GEN-LAST:event_LFPBrowseButtonActionPerformed

    /**
     * Browes to select the XEROX (i.e. xls file)
     * @param evt
     */
private void xeroxBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xeroxBrowseButtonActionPerformed
    FileFilter filter = new FileFilter() {

        public String getDescription() {
            return "XLS Files (*.xls)";
        }

        public boolean accept(File file) {
            if (file.isDirectory()) {
                return true;

            } else if (file.isFile()) {
                if (file.getName().toUpperCase().endsWith("XLS")) {
                    return true;
                }
            }
            return false;
        }
    };
    chooseFile = new JFileChooser();
    chooseFile.setFileFilter((javax.swing.filechooser.FileFilter) filter);
    int returnVal = chooseFile.showOpenDialog(this);

    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = chooseFile.getSelectedFile();
        xeroxTextField.setText(file.getPath());
    }
}//GEN-LAST:event_xeroxBrowseButtonActionPerformed

    /**
     * Select the directory where to put the modified xerox file.
     * @param evt
     */
private void designatedDirectoryBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designatedDirectoryBrowseButtonActionPerformed
    chooseFile = new JFileChooser();
    chooseFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int returnVal = chooseFile.showOpenDialog(browsePanel);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        java.io.File file = chooseFile.getSelectedFile();
        //modifiedXeroxFilePath = file.getPath();
        designatedDirectoryTextField.setText(file.getPath());
    }
}//GEN-LAST:event_designatedDirectoryBrowseButtonActionPerformed

    /**
     * After selecting the lfp file, xerox file, designated directory and project
     * start reading to lfp and xerox file and increment progress bar accordingly.
     * Put the xerox record to the list <code> dtygDataList </code> 
     * @param evt
     */
private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
    xlsReader = null;
    dtygDataList = null;

    //LFP file path
    lfpFilePath = LFPTextField.getText();
    //XEROX or XLS file  path    
    xeroxFilePath = xeroxTextField.getText();
    //directory to keep the modified XLS file.
    modifiedXeroxFilePath = designatedDirectoryTextField.getText();
    project = projectTextField.getText();
    DTYGFieldsData.project = project;

//    lfpFilePath = "/home/sunil/MEE24021.lfp";
//    xeroxFilePath = "/home/sunil/GPDIC.XLS";
//    modifiedXeroxFilePath = "/home/sunil/Desktop/";
//    project = "xerox";

    File lfpFile = new File(lfpFilePath);
    xeroxFile = new File(xeroxFilePath);
    File designateDir = new File(modifiedXeroxFilePath);

    String error = null;
    if (!xeroxFile.exists()) {
        error = "XEROX file not found";
    } else if (!lfpFile.exists()) {
        error = "LFP file not found";
    } else if (!designateDir.exists()) {
        error = "Select designated direcory";
    } else if (project.trim().isEmpty()) {
        error = "Project required";
    }

    //if any error is found stop executing and display error.
    if (error != null) {
        JOptionPane.showMessageDialog(null, error, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    processButton.setEnabled(false);
    try {
        //first read XEROX file.
        xlsReader = (DTYGXlsReaderWriter) DTYGXlsReaderWriter.reader(xeroxFilePath);
        new Thread() {

            @Override
            public void run() {
                try {
                    synchronized (LOCK) {
                        try {
                            footerLabel.setText("READING XEROX FILE");
                            dtygDataList = xlsReader.getRecordsForSheet(0, xeroxProgressBar);
                            LOCK.notifyAll();
                        } catch (Exception e) {
                        }
                    }
                } catch (Exception ex) {
                    processButton.setEnabled(true);
                    Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
                }

            }
        }.start();

        //after complition of reading of XEROX file read LFP file
        // and increase the progressbar accordingly.
        new Thread() {

            @Override
            public void run() {
                try {
                    synchronized (LOCK) {
                        try {
                            footerLabel.setText("READING LFP FILE");
                            readLFPFile(lfpFilePath);
                            parentFrame.setVisible(false);
                            //after reading xerox and lfp file instantiate <code>DTYGModViewEdit</code>
                            DTYGModViewEdit dmve = new DTYGModViewEdit(parentFrame, dtygDataList, values);
                            dmve.setLocationRelativeTo(parentFrame);
                            processButton.setEnabled(true);
                            dmve.setVisible(true);
                            LOCK.notifyAll();
                        } catch (Exception e) {
                            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, e);
                        }
                    }
                } catch (Exception ex) {
                    processButton.setEnabled(true);
                    ex.printStackTrace();
                }
            }

            /**
             * read lfp file
             */
            public void readLFPFile(String filePath) {
                File file = new File(filePath);
                try {
                    FileInputStream fis = new FileInputStream(file);
                    BufferedReader br = new BufferedReader(new FileReader(file));
                    int aval = fis.available();
                    int progressValue = aval / 100;
                    String line = null;
                    while (br.ready()) {
                        line = br.readLine();
                        aval = aval - line.getBytes().length - 2;
                        int value = (200 - aval / progressValue) / 2;
                        xeroxProgressBar.setValue(value);
                    //System.out.println(value + "-------------> " + line);
                    }
                } catch (Exception e) {
                    Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, e);
                }
            }
        }.start();

    //this.setVisible(false);
    // DTYGModViewEdit dmve = new DTYGModViewEdit(this, dtygDataList,values);
    // dmve.setLocationRelativeTo(this);
    // dmve.setVisible(true);   
    // Thread.sleep(500);             
    } catch (Exception ex) {
        Logger.getLogger(DTYGMod.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_processButtonActionPerformed

    /**
     * Write modifield xerox file.
     */
    public void writeModfiedXerox() {
        try {
            modifiedXeroxFilePath = modifiedXeroxFilePath + File.separator + "modified_" + xeroxFile.getName();
            DTYGXlsReaderWriter xlsWriter = DTYGXlsReaderWriter.writer();
            xlsWriter.write(modifiedXeroxFilePath, "sheetName", dtygDataList,0,null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * close this window and make visible to parent form.
     * @param evt
     */
private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    dispose();
    parent.setVisible(true);
}//GEN-LAST:event_formWindowClosing

    private void fillValuesInArray() {
        values = new ArrayList();
        final TaskExecuteQuery task = new TaskExecuteQuery("dtygname.result");
        task.setCallback((new Runnable() {

            public void run() {
                try {
                    ResultSet results = (ResultSet) task.getResult();
                    while (results.next()) {
                        values.add(results.getString(1));
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(DTYGModViewEdit.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }));
        task.enqueue(this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton GPDICRadioButton;
    private javax.swing.JRadioButton LDPCRadioButton;
    private javax.swing.JButton LFPBrowseButton;
    private javax.swing.JLabel LFPLabel;
    private javax.swing.JTextField LFPTextField;
    private javax.swing.JPanel browsePanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel collectionNameLabel;
    private javax.swing.JTextField collectionTextField;
    private javax.swing.JButton designatedDirectoryBrowseButton;
    private javax.swing.JLabel designatedDirectoryLabel;
    private javax.swing.JTextField designatedDirectoryTextField;
    private javax.swing.JCheckBox enableAutopushCheckBox;
    public javax.swing.JLabel footerLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel level2Label;
    private javax.swing.JLabel modifiedJobnameLabel;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JButton processButton;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectTextField;
    private javax.swing.JButton xeroxBrowseButton;
    private javax.swing.JLabel xeroxLabel;
    public javax.swing.JProgressBar xeroxProgressBar;
    private javax.swing.JTextField xeroxTextField;
    // End of variables declaration//GEN-END:variables
    private JFileChooser chooseFile;

    private static class RoundedBorder implements Border {

        private int radius;

        RoundedBorder(int radius) {
            this.radius = radius;
        }

        @Override
        public Insets getBorderInsets(Component c) {
            //return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
            return new Insets(1, 1, 1, 1);
        }

        @Override
        public boolean isBorderOpaque() {
            return false;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
        }
    }
}

