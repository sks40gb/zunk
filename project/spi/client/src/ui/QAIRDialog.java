/*
 * QAIRDialog.java
 *
 * Created on May 15, 2008, 3:22 PM
 */

package ui;

import client.TaskGetSamplingParameters;
import client.TaskSaveQAIRNotes;
import common.CommonConstants;
import common.QAInspectionReportData;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URLConnection;
import javax.swing.JOptionPane;
import model.SQLManagedComboModel;
import common.msg.MessageConstants;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import model.QueryComboModel;
import org.w3c.dom.Element;

/**
 * This class genertes QAIR report.
 * @author  anurag
 */
public class QAIRDialog extends javax.swing.JDialog implements MessageConstants{
   
   private SQLManagedComboModel projectModel = null;
   private QueryComboModel usersModel = null;
   private QueryComboModel qaLeadModel = null;
   private final String GET_ALL_PROJECTS = "AdvanceValidation.projectCombo";   
   private final String GET_ALL_QA_USERS = "Sampling.getQAUsers";
   private final String GET_ALL_QA_LEADS = "Sampling.getQALeads";
   private String volume_name = null;   
   private int sampling_id = 0;
   private String otherNonConformance = "";
   private String recommendations = "";
   private String isSamplingDone = null;
   private String qairNumber="";
   private javax.swing.JFrame parent =null;
   private QAInspectionReportData qaInspectionReportData;
   private String qair_path = null;
   private String samplingMethod = null;
   private String samplingType = null;
   private String requiredAccuracy = null;   
   
   /** Creates new form QAIRDialog */
   public QAIRDialog(javax.swing.JFrame parent, boolean modal,int project_id,int volume_id) {
      super(parent, modal);
      initComponents();      
      projectModel = new SQLManagedComboModel(GET_ALL_PROJECTS);
      projectModel.register();
      this.parent =parent;
      listAllQAUsers();
      listAllQALeads();
      fillData(project_id,volume_id);
   }
   
   public QAIRDialog(javax.swing.JFrame parent, boolean modal,int project_id,int volume_id, QAInspectionReportData qaInspectionReportData) {
      super(parent, modal);
      initComponents();      
      projectModel = new SQLManagedComboModel(GET_ALL_PROJECTS);
      projectModel.register();
      this.parent =parent;
      this.qaInspectionReportData = qaInspectionReportData;
      System.out.println("qaInspectionReportData from con" +this.qaInspectionReportData.getProjectName());
      listAllQAUsers();
      listAllQALeads();
      //fillData(project_id,volume_id);
      fillAllQAInspectionReport();
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        QAIRHeadingLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        QAIRNotextfield = new javax.swing.JTextField();
        centerPanel = new javax.swing.JPanel();
        centerTopPanel = new javax.swing.JPanel();
        centerTopLeftPanel = new javax.swing.JPanel();
        projectInofromationPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jobNameTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        documentTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fieldsTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tagsTextField = new javax.swing.JTextField();
        projectNameTextField = new javax.swing.JTextField();
        samplingMetricsPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        samplingMethodTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        samplingTypeTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        requriedAccuracyTextField = new javax.swing.JTextField();
        centerTopRightPanel = new javax.swing.JPanel();
        QAResultPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        QAResultComboBox = new javax.swing.JComboBox();
        samplingResultPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        QALevelTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        rejectionNoTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        actualAccuracyTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        samplingDocumentsTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        samplingFieldsTextField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        samplingTagsTextField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        docsErrorTextField = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        fieldsErrorTextField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        tagsErrorTextField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        miscodedTextField = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        uncodedTextField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        addedTextField = new javax.swing.JTextField();
        centerBottomPanel = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        proofReadByComboBox = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        fileCompareByComboBox = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        mdbCheckByComboBox = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        outputCheckByComboBox = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        outputCheckResultComboBox = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        previousSubmissionErrorCorrectedComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel36 = new javax.swing.JLabel();
        notedBySupvDateComboBox = new javax.swing.JComboBox();
        preparedByQAStaffComboBox = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        otherNonConformanceTextArea = new javax.swing.JTextArea();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        recommendationsTextArea = new javax.swing.JTextArea();
        jLabel40 = new javax.swing.JLabel();
        productionFacilityComboBox = new javax.swing.JComboBox();
        jLabel41 = new javax.swing.JLabel();
        erringSectionComboBox = new javax.swing.JComboBox();
        approvedBySupvDateComboBox = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        enableGeneratedFieldsCheckBox = new javax.swing.JCheckBox();
        enterErrorDetailsButton = new javax.swing.JButton();
        clearEntriesButton = new javax.swing.JButton();
        generateQAIRButton = new javax.swing.JButton();
        dispositionButton = new javax.swing.JButton();
        submitToPMGButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QAIR");

        topPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        QAIRHeadingLabel.setFont(new java.awt.Font("Dialog", 1, 16));
        QAIRHeadingLabel.setText("Quality Assurance Inspection Report (QAIR)");

        jLabel2.setText("No.");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(QAIRHeadingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QAIRNotextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QAIRHeadingLabel)
                    .addComponent(QAIRNotextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        centerPanel.setLayout(new java.awt.BorderLayout());

        centerTopPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        centerTopLeftPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        projectInofromationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("PROJECT INFORMATION :");

        jLabel4.setText("Project Name");

        jLabel5.setText("Job Name");

        jobNameTextField.setEnabled(false);

        jLabel6.setText("Documents");

        documentTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        documentTextField.setEnabled(false);

        jLabel7.setText("Fields");

        fieldsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldsTextField.setEnabled(false);

        jLabel8.setText("Tags");

        tagsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tagsTextField.setEnabled(false);

        projectNameTextField.setEnabled(false);

        javax.swing.GroupLayout projectInofromationPanelLayout = new javax.swing.GroupLayout(projectInofromationPanel);
        projectInofromationPanel.setLayout(projectInofromationPanelLayout);
        projectInofromationPanelLayout.setHorizontalGroup(
            projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                        .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel6))
                                    .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                        .addComponent(documentTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGap(4, 4, 4))
                            .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(28, 28, 28)))
                        .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, projectInofromationPanelLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel7)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel8))
                            .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jobNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(fieldsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tagsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(projectNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                                .addGap(33, 33, 33))))
                    .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(156, Short.MAX_VALUE))))
        );
        projectInofromationPanelLayout.setVerticalGroup(
            projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectInofromationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(projectInofromationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        samplingMetricsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("SAMPLING METRICS :");

        jLabel10.setText("Method");

        samplingMethodTextField.setEnabled(false);

        jLabel11.setText("Sampling Type");

        samplingTypeTextField.setEnabled(false);

        jLabel12.setText("Required Accuracy");

        requriedAccuracyTextField.setEnabled(false);

        javax.swing.GroupLayout samplingMetricsPanelLayout = new javax.swing.GroupLayout(samplingMetricsPanel);
        samplingMetricsPanel.setLayout(samplingMetricsPanelLayout);
        samplingMetricsPanelLayout.setHorizontalGroup(
            samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(samplingMetricsPanelLayout.createSequentialGroup()
                .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(samplingMetricsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(requriedAccuracyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(samplingMethodTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(samplingTypeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))))
                .addContainerGap())
        );
        samplingMetricsPanelLayout.setVerticalGroup(
            samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(samplingMetricsPanelLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(samplingMethodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(samplingTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingMetricsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(requriedAccuracyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout centerTopLeftPanelLayout = new javax.swing.GroupLayout(centerTopLeftPanel);
        centerTopLeftPanel.setLayout(centerTopLeftPanelLayout);
        centerTopLeftPanelLayout.setHorizontalGroup(
            centerTopLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerTopLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerTopLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(projectInofromationPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(samplingMetricsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                .addContainerGap())
        );
        centerTopLeftPanelLayout.setVerticalGroup(
            centerTopLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerTopLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectInofromationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(samplingMetricsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        centerTopPanel.add(centerTopLeftPanel);

        centerTopRightPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        QAResultPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setText(">>>>>>>>>>> >>>>>");

        jLabel14.setText("QA RESULT :");

        QAResultComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Accept", "Reject" }));
        QAResultComboBox.setEnabled(false);

        javax.swing.GroupLayout QAResultPanelLayout = new javax.swing.GroupLayout(QAResultPanel);
        QAResultPanel.setLayout(QAResultPanelLayout);
        QAResultPanelLayout.setHorizontalGroup(
            QAResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QAResultPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QAResultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        QAResultPanelLayout.setVerticalGroup(
            QAResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QAResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(QAResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(QAResultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        samplingResultPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setText("SAMPLING RESULTS :");

        jLabel16.setText("QA Level");

        QALevelTextField.setEnabled(false);

        jLabel17.setText("Rejection No.");

        rejectionNoTextField.setEnabled(false);

        jLabel18.setText("Actual Accuracy");

        actualAccuracyTextField.setEnabled(false);

        jLabel19.setText("Documents");

        samplingDocumentsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        samplingDocumentsTextField.setEnabled(false);

        jLabel20.setText("Fields");

        samplingFieldsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        samplingFieldsTextField.setEnabled(false);

        jLabel21.setText("Tags");

        samplingTagsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        samplingTagsTextField.setEnabled(false);

        jLabel22.setText("Docs with Errors");

        docsErrorTextField.setEnabled(false);

        jLabel23.setText("Fields with Errors");

        fieldsErrorTextField.setEnabled(false);

        jLabel24.setText("Tags with Errors");

        tagsErrorTextField.setEnabled(false);

        jLabel25.setText("Miscoded");

        miscodedTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        miscodedTextField.setEnabled(false);

        jLabel26.setText("Uncoded");

        uncodedTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        uncodedTextField.setEnabled(false);

        jLabel27.setText("Added");

        addedTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        addedTextField.setEnabled(false);

        javax.swing.GroupLayout samplingResultPanelLayout = new javax.swing.GroupLayout(samplingResultPanel);
        samplingResultPanel.setLayout(samplingResultPanelLayout);
        samplingResultPanelLayout.setHorizontalGroup(
            samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(samplingResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(samplingResultPanelLayout.createSequentialGroup()
                        .addComponent(samplingDocumentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(samplingFieldsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(samplingTagsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(samplingResultPanelLayout.createSequentialGroup()
                        .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(docsErrorTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fieldsErrorTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(tagsErrorTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25)))
                    .addGroup(samplingResultPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel20)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel21))
                    .addGroup(samplingResultPanelLayout.createSequentialGroup()
                        .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QALevelTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(rejectionNoTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(actualAccuracyTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addGap(53, 53, 53)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(miscodedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(uncodedTextField)
                    .addComponent(addedTextField))
                .addContainerGap())
        );
        samplingResultPanelLayout.setVerticalGroup(
            samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(samplingResultPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(12, 12, 12)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(QALevelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(rejectionNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(actualAccuracyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(samplingDocumentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(samplingFieldsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(samplingTagsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel25)
                    .addComponent(miscodedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(docsErrorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(uncodedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldsErrorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(samplingResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(tagsErrorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(addedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout centerTopRightPanelLayout = new javax.swing.GroupLayout(centerTopRightPanel);
        centerTopRightPanel.setLayout(centerTopRightPanelLayout);
        centerTopRightPanelLayout.setHorizontalGroup(
            centerTopRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerTopRightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(centerTopRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(samplingResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(QAResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        centerTopRightPanelLayout.setVerticalGroup(
            centerTopRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerTopRightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QAResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(samplingResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        centerTopPanel.add(centerTopRightPanel);

        centerPanel.add(centerTopPanel, java.awt.BorderLayout.PAGE_START);

        centerBottomPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel28.setText("QA Notes :");

        jLabel29.setText("Proof Read By");

        proofReadByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel30.setText("File Compare by");

        fileCompareByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel31.setText("MDB Check By");

        mdbCheckByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel32.setText("Output Check By");

        outputCheckByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel33.setText("Output Check Result");

        outputCheckResultComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Accept", "Reject" }));

        jLabel34.setText("by");

        jLabel35.setText("Previous Submission error corrected ?");

        previousSubmissionErrorCorrectedComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a", "Yes", "No" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel36.setText("Prepared By QA Staff");

        notedBySupvDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        preparedByQAStaffComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel37.setText("Noted By Supv/Date");

        otherNonConformanceTextArea.setColumns(20);
        otherNonConformanceTextArea.setRows(5);
        jScrollPane2.setViewportView(otherNonConformanceTextArea);

        jLabel38.setText("Other Non-Conformance");

        jLabel39.setText("Recommendations");

        recommendationsTextArea.setColumns(20);
        recommendationsTextArea.setRows(5);
        jScrollPane3.setViewportView(recommendationsTextArea);

        jLabel40.setText("Production Facility");

        productionFacilityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a", "Metrobyte", "MBROS", "Mytab", "Lerm", "Surfast", "Cherub", "G-Axcess", "NEF", "S&R", "Onrams" }));

        jLabel41.setText("Erring Section");

        erringSectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        approvedBySupvDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "n/a" }));

        jLabel42.setText("Approved by Supv/Group Head / Date");

        jLabel43.setText("(if reject)");

        bottomPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        enableGeneratedFieldsCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11));
        enableGeneratedFieldsCheckBox.setText("Enable/Disable Generated Fields");
        enableGeneratedFieldsCheckBox.setEnabled(false);

        enterErrorDetailsButton.setText("Enter Error Details");
        enterErrorDetailsButton.setEnabled(false);

        clearEntriesButton.setText("Clear Entries");
        clearEntriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearEntriesButtonActionPerformed(evt);
            }
        });

        generateQAIRButton.setText("Save QAIR");
        generateQAIRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateQAIRButtonActionPerformed(evt);
            }
        });

        dispositionButton.setText("Disposition");
        dispositionButton.setEnabled(false);

        submitToPMGButton.setText("Submit to PMG");
        submitToPMGButton.setEnabled(false);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enableGeneratedFieldsCheckBox)
                .addGap(26, 26, 26)
                .addComponent(enterErrorDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearEntriesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateQAIRButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dispositionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitToPMGButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton)
                .addGap(40, 40, 40))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enableGeneratedFieldsCheckBox)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                        .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generateQAIRButton)
                            .addComponent(clearEntriesButton)
                            .addComponent(enterErrorDetailsButton)
                            .addComponent(dispositionButton)
                            .addComponent(submitToPMGButton)
                            .addComponent(exitButton))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout centerBottomPanelLayout = new javax.swing.GroupLayout(centerBottomPanel);
        centerBottomPanel.setLayout(centerBottomPanelLayout);
        centerBottomPanelLayout.setHorizontalGroup(
            centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerBottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(notedBySupvDateComboBox, 0, 354, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addComponent(jLabel28)
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previousSubmissionErrorCorrectedComboBox, 0, 87, Short.MAX_VALUE))
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33)
                            .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel34)))
                        .addGap(10, 10, 10)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox9, 0, 213, Short.MAX_VALUE))
                            .addComponent(proofReadByComboBox, 0, 213, Short.MAX_VALUE)
                            .addComponent(mdbCheckByComboBox, 0, 213, Short.MAX_VALUE)
                            .addComponent(outputCheckByComboBox, 0, 213, Short.MAX_VALUE)
                            .addComponent(outputCheckResultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(32, 32, 32)
                        .addComponent(fileCompareByComboBox, 0, 223, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(jLabel37))
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel38)
                                    .addContainerGap(463, Short.MAX_VALUE))
                                .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel39)
                                    .addContainerGap())
                                .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                    .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                                    .addContainerGap())
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                                    .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(preparedByQAStaffComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 338, Short.MAX_VALUE)
                                        .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel41)
                                            .addGap(31, 31, 31)
                                            .addComponent(erringSectionComboBox, 0, 204, Short.MAX_VALUE))
                                        .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel40)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(productionFacilityComboBox, 0, 183, Short.MAX_VALUE)))
                                    .addGap(299, 299, 299)))
                            .addGroup(centerBottomPanelLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addContainerGap())))
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(approvedBySupvDateComboBox, 0, 347, Short.MAX_VALUE)
                        .addGap(302, 302, 302))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        centerBottomPanelLayout.setVerticalGroup(
            centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerBottomPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(proofReadByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(fileCompareByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(mdbCheckByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(outputCheckByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(outputCheckResultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40)
                            .addComponent(productionFacilityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(previousSubmissionErrorCorrectedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel41)
                        .addComponent(erringSectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(centerBottomPanelLayout.createSequentialGroup()
                        .addComponent(preparedByQAStaffComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notedBySupvDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approvedBySupvDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centerBottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        centerPanel.add(centerBottomPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1040)/2, (screenSize.height-900)/2, 1040, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void clearEntriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearEntriesButtonActionPerformed
         QAIRNotextfield.setText("");
         proofReadByComboBox.setSelectedIndex(-1);
         fileCompareByComboBox.setSelectedIndex(-1);
         mdbCheckByComboBox.setSelectedIndex(-1);
         outputCheckByComboBox.setSelectedIndex(-1);
         outputCheckResultComboBox.setSelectedIndex(-1);
         otherNonConformanceTextArea.setText("");
         recommendationsTextArea.setText("");
         productionFacilityComboBox.setSelectedIndex(-1);
         erringSectionComboBox.setSelectedIndex(-1);
         preparedByQAStaffComboBox.setSelectedIndex(-1);           
         notedBySupvDateComboBox.setSelectedIndex(-1);           
         approvedBySupvDateComboBox.setSelectedIndex(-1);
         previousSubmissionErrorCorrectedComboBox.setSelectedIndex(-1);
         previousSubmissionErrorCorrectedComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_clearEntriesButtonActionPerformed

   private void generateQAIRButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
      //  try {
            generateQAIRButton.setEnabled(true);
             qairNumber = QAIRNotextfield.getText();
             String samplingResult = "";
             
             if(null != QAResultComboBox.getSelectedItem()){
                 samplingResult = QAResultComboBox.getSelectedItem().toString();
             }
             
             String proofReadBy ="";
             if(null != proofReadByComboBox.getSelectedItem()){
                 proofReadBy = proofReadByComboBox.getSelectedItem().toString();
             }
             
            String fileCompareBy = "";
            if(null != fileCompareByComboBox.getSelectedItem()){
                fileCompareBy = fileCompareByComboBox.getSelectedItem().toString();
             }
            String mdbCheckBy = "";           
            if(null != mdbCheckByComboBox.getSelectedItem()){
                mdbCheckBy = mdbCheckByComboBox.getSelectedItem().toString();
             }
            String outputCheckBy = "";
            if(null != outputCheckByComboBox.getSelectedItem()){
                outputCheckBy = outputCheckByComboBox.getSelectedItem().toString();
             }
            String outputCheckResult = "";
            if(null != outputCheckResultComboBox.getSelectedItem()){
                outputCheckResult = outputCheckResultComboBox.getSelectedItem().toString();
             }
            
            
            if(null != otherNonConformanceTextArea.getText()){
               otherNonConformance = otherNonConformanceTextArea.getText();
             }
            
            if(null != recommendationsTextArea.getText()){
               recommendations = recommendationsTextArea.getText();
             }
            String productionFacility = "";
             if(null != productionFacilityComboBox.getSelectedItem()){
                productionFacility = productionFacilityComboBox.getSelectedItem().toString();
             }
            String erringSection = "";
            if(null != erringSectionComboBox.getSelectedItem()){
                erringSection = erringSectionComboBox.getSelectedItem().toString();
             }
            String preparedByQAStaff = "";
            if(null != preparedByQAStaffComboBox.getSelectedItem()){
                preparedByQAStaff = preparedByQAStaffComboBox.getSelectedItem().toString();
             }
            String notedByQASupvDate = "";
            if(null != notedBySupvDateComboBox.getSelectedItem()){
                   notedByQASupvDate = notedBySupvDateComboBox.getSelectedItem().toString();
            }
          
            String approvedByQASupvDate = "";
             if(null != approvedBySupvDateComboBox.getSelectedItem()){
                   approvedByQASupvDate = approvedBySupvDateComboBox.getSelectedItem().toString();
            }
            
            String previousSubmissionErrorCorrected = "";
            if(null != previousSubmissionErrorCorrectedComboBox.getSelectedItem()){
                   previousSubmissionErrorCorrected = previousSubmissionErrorCorrectedComboBox.getSelectedItem().toString();
            }
            if(sampling_id != 0){
                   if(qairNumber.trim().length() == 0 || qairNumber.isEmpty()){                
                       JOptionPane.showMessageDialog(this,
                                  "QAIR Number should not be empty",
                                  "Error",
                                  JOptionPane.ERROR_MESSAGE);  
                       generateQAIRButton.setEnabled(true);  
                       QAIRNotextfield.requestFocus();
                  }            
                  else{
                     boolean isQairNumberValid = false;
                     List flagList = new ArrayList();
                     for(int j = 0;j < qairNumber.length();j++){
                        char c = qairNumber.charAt(j);
                        try{
                           int i = Integer.parseInt(Character.toString(c));  
                           flagList.add(true);
                        }catch(NumberFormatException exc){
                           if(Character.toString(c).equals("_")){
                              flagList.add(true);
                           }else{
                              flagList.add(false);
                           }
                        }                     
                     }

                     for(Object obj : flagList){
                        if(obj.equals(true)){
                           isQairNumberValid = true;
                        }
                     }

                          if(isQairNumberValid){
                                     
                                   final TaskSaveQAIRNotes task = new TaskSaveQAIRNotes(sampling_id, 
                                          proofReadBy, fileCompareBy, mdbCheckBy, outputCheckBy, 
                                          outputCheckResult, otherNonConformance, recommendations, 
                                          productionFacility, erringSection, preparedByQAStaff, notedByQASupvDate, 
                                          approvedByQASupvDate, previousSubmissionErrorCorrected,qairNumber, samplingResult);

                                  task.setCallback(new Runnable() {
                                   public void run() {
                                       Element reply = (Element) task.getResult();
                                       String action = reply.getNodeName();  
                                       if(!action.equals(T_FAIL)){
                                           qair_path = reply.getAttribute(A_PATH);
                                           if(qairButtonActionPerformed(null)){                                                         
                                               JOptionPane.showMessageDialog(null,
                                                           "QAIR Report is saved",
                                                           "SAVED",
                                                           JOptionPane.INFORMATION_MESSAGE);
                                                exitButtonActionPerformed(null);
                                           }else{
                                                generateQAIRButton.setEnabled(true);
                                                JOptionPane.showMessageDialog(null,
                                                       "QAIR Report is not saved",
                                                       "Error",
                                                       JOptionPane.ERROR_MESSAGE); 
                                          }                                          
                                       }                                       
                                   }}); 
                                  task.enqueue(this);                               
                           }else{
                               generateQAIRButton.setEnabled(true);
                               JOptionPane.showMessageDialog(null,
                                         "QAIR Number can be numbers or alpha-numeric",
                                         "Error",
                                         JOptionPane.ERROR_MESSAGE);
                               QAIRNotextfield.requestFocus();
                          }
                  }           
            }else{               
                 JOptionPane.showMessageDialog(null,
                     "Unable to generate QAIR.\nPlease check the project and volume",
                     "Error",
                     JOptionPane.ERROR_MESSAGE); 
            }
   }
                                                
                                            
   private void listAllQAUsers(){
      usersModel = new QueryComboModel(GET_ALL_QA_USERS);      
      proofReadByComboBox.setModel(usersModel);
      usersModel = new QueryComboModel(GET_ALL_QA_USERS);
      fileCompareByComboBox.setModel(usersModel);
      usersModel = new QueryComboModel(GET_ALL_QA_USERS);
      outputCheckByComboBox.setModel(usersModel);
      usersModel = new QueryComboModel(GET_ALL_QA_USERS);
      mdbCheckByComboBox.setModel(usersModel);
      usersModel = new QueryComboModel(GET_ALL_QA_USERS);
      preparedByQAStaffComboBox.setModel(usersModel);          
   }
   private void listAllQALeads(){        
      //-----------list all qa-leads ---------------
      qaLeadModel = new QueryComboModel(GET_ALL_QA_LEADS);      
      notedBySupvDateComboBox.setModel(qaLeadModel);
      qaLeadModel = new QueryComboModel(GET_ALL_QA_LEADS);      
      approvedBySupvDateComboBox.setModel(qaLeadModel);      
   }
  
   public String[] resultArray ;
   public void fillData(int project_id,int volume_id){     
      final TaskGetSamplingParameters task = new TaskGetSamplingParameters(volume_id, project_id);
      task.setCallback(new Runnable() {
         public void run()
         {            
            try{               
             resultArray  = (String[])task.getResult();
            }catch(Exception e){
               e.printStackTrace();
            } 
            isSamplingDone = resultArray[15].toString();
            if(isSamplingDone.equalsIgnoreCase("false")){
               sampling_id = Integer.parseInt(resultArray[14]);               
               jobNameTextField.setText(resultArray[1]);
               samplingMethodTextField.setText(resultArray[2] + " " + resultArray[4] + " (" + resultArray[5] + ")");
               samplingTypeTextField.setText(resultArray[3]);
               samplingTagsTextField.setText("0");
               requriedAccuracyTextField.setText("n/a");
               QAResultComboBox.setSelectedItem(resultArray[12]);
               QALevelTextField.setText(resultArray[13]);
               rejectionNoTextField.setText(resultArray[6]);
               fieldsErrorTextField.setText(resultArray[7]);
               actualAccuracyTextField.setText("n/a");
               fieldsTextField.setText(resultArray[9]);
               documentTextField.setText(resultArray[8]);
               tagsTextField.setText("0");
               samplingDocumentsTextField.setText(resultArray[10]);
               samplingFieldsTextField.setText(resultArray[11]);
               samplingTagsTextField.setText(resultArray[16]);
               miscodedTextField.setText(resultArray[17]);
               uncodedTextField.setText(resultArray[18]);
               addedTextField.setText(resultArray[19]);                                     
            }else{
               //JOptionPane.showMessageDialog(QAIRDialog.this,"Sampling for this volume has been finished");
            }
         }         
      });
      task.enqueue(this);
   }
//To save the QAIR report in local folder
  private boolean qairButtonActionPerformed(java.awt.event.ActionEvent evt) {        
        URLConnection conn = null;
        InputStream in = null;
        OutputStream out = null;
        String response = null;
            JFileChooser saveFile = new JFileChooser();
            saveFile.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int i = saveFile.showSaveDialog(this);
            if (i == JFileChooser.APPROVE_OPTION) {
               response = saveFile.getSelectedFile().getPath();               
               if(response == null || !response.contains(".pdf")){
                  JOptionPane.showMessageDialog(this,"Specify the file name with pdf extension");
                  qairButtonActionPerformed(null);
                  //return false;
               }             
            }else{ //CANCEL_OPTION
               return false;
            }
            try {               
                URL url = new URL(qair_path);
                conn = url.openConnection();
                in = conn.getInputStream();
                out = new BufferedOutputStream(new FileOutputStream(response));
                byte[] buffer = new byte[1024];
                int numRead;
                long numWritten = 0;
                while ((numRead = in.read(buffer)) != -1) {
                    out.write(buffer, 0, numRead);
                    numWritten += numRead;
                }
                //dispose();
                return true;
            } catch (Exception exception) {
                exception.printStackTrace();
                return false;
            } finally {
                try {
                    if (in != null) {
                        in.close();
                    }
                    if (out != null) {
                        out.close();
                    }
                } catch (IOException ioe) {
                }
            }            
    }
   
   public String getVolume_name()
   {
      return volume_name;
   }

   public void setVolume_name(String volume_name)
   {
      this.volume_name = volume_name;
   }
   /**
    * Method to fill the QAInspectionReport Details
    */
   private void fillAllQAInspectionReport() {
       jLabel18.setText("AQL");
       if(null != qaInspectionReportData) {
           int rejectNumber = qaInspectionReportData.getRejectionNo();
           int numberOfCorrections = qaInspectionReportData.getCorrectionDataCount();
           
           if(numberOfCorrections >= rejectNumber) {
               QAResultComboBox.setSelectedIndex(1);
               System.out.println("Reject");
           }else {
               QAResultComboBox.setSelectedIndex(0);
               System.out.println("Accecpt");
           }
           
           samplingMethod = qaInspectionReportData.getSamplingMethod();
           samplingType = qaInspectionReportData.getSamplingType();
           
           if(samplingMethod.equalsIgnoreCase(CommonConstants.QA_SAMPLING_TYPE_ISO)){
               requiredAccuracy = "n/a";
           }else{
               requiredAccuracy = qaInspectionReportData.getAccuracyRequired();
           }
           
           if(samplingType.equalsIgnoreCase(CommonConstants.QA_SAMPLING_CHARACTER)){
               jLabel8.setText("Chars");
               jLabel21.setText("Chars");                              
           }else{
               jLabel8.setText("Tags");
               jLabel21.setText("Tags");               
           }
           
           sampling_id = qaInspectionReportData.getSamplingId();
           String projectName = qaInspectionReportData.getProjectName();
           projectNameTextField.setText(projectName);
           jobNameTextField.setText(qaInspectionReportData.getVolumeName());
           documentTextField.setText(""+qaInspectionReportData.getDocumentCount());
           fieldsTextField.setText(""+qaInspectionReportData.getFieldCount()*qaInspectionReportData.getDocumentCount());
           tagsTextField.setText(""+qaInspectionReportData.getTagCount());
           samplingMethodTextField.setText(samplingMethod);
           samplingTypeTextField.setText(samplingType);
           requriedAccuracyTextField.setText(requiredAccuracy);
           QALevelTextField.setText(qaInspectionReportData.getQALevel());
           rejectionNoTextField.setText(""+rejectNumber);
           samplingDocumentsTextField.setText(""+qaInspectionReportData.getSampledDocumentCount());
           samplingFieldsTextField.setText(""+qaInspectionReportData.getSampledFieldCount());
           samplingTagsTextField.setText(qaInspectionReportData.getSampledTagCount());
           docsErrorTextField.setText(""+qaInspectionReportData.getNumberOfDocWithError());
           fieldsErrorTextField.setText(""+qaInspectionReportData.getNumberOfFieldWithError());
           tagsErrorTextField.setText(""+qaInspectionReportData.getNumberOfTagWithError());
           miscodedTextField.setText(""+qaInspectionReportData.getNumberOfMisCoded());
           uncodedTextField.setText(""+qaInspectionReportData.getNumberOfUnCoded());
           addedTextField.setText(""+qaInspectionReportData.getNumberOfAdded());
           actualAccuracyTextField.setText( ""+qaInspectionReportData.getAQL_Value());
                  
       }else {
           //no report available for given volume
           JOptionPane.showMessageDialog(this,
                            "No Inspection Report Available for Given Volume");  
           
       }
   }
  
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel QAIRHeadingLabel;
    private javax.swing.JTextField QAIRNotextfield;
    private javax.swing.JTextField QALevelTextField;
    private javax.swing.JComboBox QAResultComboBox;
    private javax.swing.JPanel QAResultPanel;
    private javax.swing.JTextField actualAccuracyTextField;
    private javax.swing.JTextField addedTextField;
    private javax.swing.JComboBox approvedBySupvDateComboBox;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel centerBottomPanel;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel centerTopLeftPanel;
    private javax.swing.JPanel centerTopPanel;
    private javax.swing.JPanel centerTopRightPanel;
    private javax.swing.JButton clearEntriesButton;
    private javax.swing.JButton dispositionButton;
    private javax.swing.JTextField docsErrorTextField;
    private javax.swing.JTextField documentTextField;
    private javax.swing.JCheckBox enableGeneratedFieldsCheckBox;
    private javax.swing.JButton enterErrorDetailsButton;
    private javax.swing.JComboBox erringSectionComboBox;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField fieldsErrorTextField;
    private javax.swing.JTextField fieldsTextField;
    private javax.swing.JComboBox fileCompareByComboBox;
    private javax.swing.JButton generateQAIRButton;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jobNameTextField;
    private javax.swing.JComboBox mdbCheckByComboBox;
    private javax.swing.JTextField miscodedTextField;
    private javax.swing.JComboBox notedBySupvDateComboBox;
    private javax.swing.JTextArea otherNonConformanceTextArea;
    private javax.swing.JComboBox outputCheckByComboBox;
    private javax.swing.JComboBox outputCheckResultComboBox;
    private javax.swing.JComboBox preparedByQAStaffComboBox;
    private javax.swing.JComboBox previousSubmissionErrorCorrectedComboBox;
    private javax.swing.JComboBox productionFacilityComboBox;
    private javax.swing.JPanel projectInofromationPanel;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JComboBox proofReadByComboBox;
    private javax.swing.JTextArea recommendationsTextArea;
    private javax.swing.JTextField rejectionNoTextField;
    private javax.swing.JTextField requriedAccuracyTextField;
    private javax.swing.JTextField samplingDocumentsTextField;
    private javax.swing.JTextField samplingFieldsTextField;
    private javax.swing.JTextField samplingMethodTextField;
    private javax.swing.JPanel samplingMetricsPanel;
    private javax.swing.JPanel samplingResultPanel;
    private javax.swing.JTextField samplingTagsTextField;
    private javax.swing.JTextField samplingTypeTextField;
    private javax.swing.JButton submitToPMGButton;
    private javax.swing.JTextField tagsErrorTextField;
    private javax.swing.JTextField tagsTextField;
    private javax.swing.JPanel topPanel;
    private javax.swing.JTextField uncodedTextField;
    // End of variables declaration//GEN-END:variables
   
}
