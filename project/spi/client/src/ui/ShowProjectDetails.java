/*
 * ShowProjectDetails.java
 *
 * Created on September 5, 2008, 7:28 PM
 */

package ui;

import client.ClientTask;
import client.TaskExecuteQuery;
import client.TaskGetCoderBatchInfo;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Dialog Window to Show Project Details
 * @author  Prakasha
 */
public class ShowProjectDetails extends javax.swing.JDialog {
    
    /** Creates new form ShowProjectDetails */
    private int projectId;
    private int volumeId;
    private String projectFieldsName="";
    private String coadersNames = "";
    
    public ShowProjectDetails(java.awt.Frame parent, boolean modal, int projectId, int volumeId) {
        super(parent, modal);
        this.projectId = projectId;
        this.volumeId = volumeId;
        setPreferredSize(new Dimension(400,250));
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ViewProjectDetails");
        loadProjectfields();
        
    }
    
    public ShowProjectDetails(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projectDetailsLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        projectFieldsLabel = new javax.swing.JLabel();
        codersLabel = new javax.swing.JLabel();
        projectFieldsValueLabel = new javax.swing.JLabel();
        codersValueLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ViewProjectDetails");
        setAlwaysOnTop(true);

        projectDetailsLabel.setText("Project Details");
        projectDetailsLabel.setPreferredSize(new java.awt.Dimension(200, 15));

        projectFieldsLabel.setText("Project Fields : ");

        codersLabel.setText("Coders : ");

        projectFieldsValueLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        projectFieldsValueLabel.setMaximumSize(new java.awt.Dimension(250, 15));
        projectFieldsValueLabel.setPreferredSize(new java.awt.Dimension(250, 15));
        projectFieldsValueLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                projectFieldsValueLabelMouseEntered(evt);
            }
        });

        codersValueLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        codersValueLabel.setMaximumSize(new java.awt.Dimension(250, 15));
        codersValueLabel.setPreferredSize(new java.awt.Dimension(250, 15));
        codersValueLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                codersValueLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(projectFieldsLabel)
                    .addComponent(codersLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codersValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(projectFieldsValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectFieldsLabel)
                    .addComponent(projectFieldsValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codersValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codersLabel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(projectDetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(projectDetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void projectFieldsValueLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectFieldsValueLabelMouseEntered
       projectFieldsValueLabel.setToolTipText(projectFieldsName);
    }//GEN-LAST:event_projectFieldsValueLabelMouseEntered

    private void codersValueLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coderValueLabelMouseEntered
        codersValueLabel.setToolTipText(coadersNames);
    }//GEN-LAST:event_coderValueLabelMouseEntered

 
    
    private void loadProjectfields() {
        try {         
         final ClientTask taskDisplay = new TaskExecuteQuery("qapr.getProjectFields",""+projectId);
         taskDisplay.setCallback(new Runnable()
                {
                   public void run()
                    {
                        try {                           
                           ResultSet results = (java.sql.ResultSet) taskDisplay.getResult();
                           while(results.next()) {
                               projectFieldsName = projectFieldsName+results.getString(1);
                               projectFieldsName = projectFieldsName+",";
                           }
                           if(projectFieldsName.charAt(projectFieldsName.length()-1) == ',') {
                               projectFieldsName = projectFieldsName.substring(0,projectFieldsName.length()-1);
                           }
                           System.out.println("Project Fields: "+projectFieldsName);
                          loadCoaderNames();
                        } catch (SQLException ex) {
                           ex.printStackTrace();
                        }
                    }
                 });
         taskDisplay.enqueue(this);
      } catch (Throwable th) {
         th.printStackTrace();
      }
    }
    
    private void loadCoaderNames() {
        try {         
         final ClientTask taskDisplay = new TaskGetCoderBatchInfo(volumeId);
         taskDisplay.setCallback(new Runnable()
                {
                   public void run()
                    {
                        try {                           
                           ResultSet results = (java.sql.ResultSet) taskDisplay.getResult();
                           while(results.next()) {
                               coadersNames = coadersNames+results.getString(2).split(",")[0];
                               coadersNames = coadersNames+",";
                           }
                           
                           if(coadersNames.length() > 0 && coadersNames.charAt(coadersNames.length()-1) == ',') {
                               coadersNames = coadersNames.substring(0,coadersNames.length()-1);
                           }
                           initComponents();
                           loadform();
                          System.out.println("coadersNames: "+coadersNames);
                        } catch (SQLException ex) {
                           ex.printStackTrace();
                        }
                    }
                 });
         taskDisplay.enqueue(this);
      } catch (Throwable th) {
         th.printStackTrace();
      }
    }
    
    private void loadform() {
        projectFieldsValueLabel.setText(projectFieldsName);
        codersValueLabel.setText(coadersNames);
    }
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 ShowProjectDetails dialog = new ShowProjectDetails(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel codersLabel;
    private javax.swing.JLabel codersValueLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel projectDetailsLabel;
    private javax.swing.JLabel projectFieldsLabel;
    private javax.swing.JLabel projectFieldsValueLabel;
    // End of variables declaration//GEN-END:variables
    
}
