/* $Header: /home/common/cvsarea/ibase/dia/src/ui/DelimiterPanel.java,v 1.7.6.4 2006/03/28 12:18:26 nancy Exp $ */
/*
 * DelimiterPanel.java
 *
 * Created on December 9, 2004, 9:12 AM
 */

package ui;

import client.ClientTask;
import client.TaskExecuteQuery;
import client.TaskSendDelimiterData;
import common.DelimiterData;
import common.ExportData;
import common.Log;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * This container is used in <code>ui.ExportPage</code> and
 * <code>ui.PopulatePage</code>, to hold the <code>ui.DelimiterDialog</code>.
 * Delimiter data can be deleted from this panel, or added and edited
 * by calling <code>DelimiterDialog</code>.
 * @author  Nancy McCall
 * @see common.DelimiterData
 * @see DelimiterDialog
 */
public class DelimiterPanel extends javax.swing.JPanel {

    final static String DEFAULT = "Default Parameters";

    private boolean save = false;

    private DelimiterData data;

    private DefaultComboBoxModel exportModel = null;

    /** Creates new form DelimiterPanel */
    public DelimiterPanel(DelimiterData data) {
        initComponents();
        this.data = data;
        exportModel = new DefaultComboBoxModel();
        if (this.data == null) {
            data = new DelimiterData();
            delimiterCombo.setEditable(true);
        } else {
            if (data.delimiter_set_name.equals("")) {
                delimiterCombo.setEditable(true);
            } else {
                delimiterCombo.addItem(data.delimiter_set_name);
                delimiterCombo.setEnabled(false); // can't change name on edit
                delimiterCombo.setSelectedIndex(0);
            }
            fieldDelimiter.setText(data.field_delimiter);
            textQualifier.setText(data.text_qualifier); 
            valueSeparator.setText(data.value_separator);
            nameMask1.setText(data.name_mask1);
            nameMask2.setText(data.name_mask2);
            nameMask3.setText(data.name_mask3);
            nameMask4.setText(data.name_mask4);
            dateFormat.setText(data.date_format);
            missingDate.setText(data.missing_date);
            missingYear.setText(data.missing_year);
            missingMonth.setText(data.missing_month);
            missingDay.setText(data.missing_day);
            brsCheckBox.setSelected(data.brs_format.equals("Yes") ? true : false);
            upperCheckBox.setSelected(data.uppercase.equals("Yes") ? true : false);

            fieldDelimiter.setEnabled(true);
            textQualifier.setEnabled(true);
            valueSeparator.setEnabled(true);
            nameMask1.setEnabled(true);
            nameMask2.setEnabled(true);
            nameMask3.setEnabled(true);
            nameMask4.setEnabled(true);
            dateFormat.setEnabled(true);
            missingDate.setEnabled(true);
            missingYear.setEnabled(true);
            missingMonth.setEnabled(true);
            missingDay.setEnabled(true);
            brsCheckBox.setEnabled(true);
            upperCheckBox.setEnabled(true);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        delimitersPanel = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        delimiterCombo = new javax.swing.JComboBox();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        delimiterDataPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        brsCheckBox = new javax.swing.JCheckBox();
        upperCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        fieldDelimiter = new beans.LTextField();
		combofielddelimiter = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        textQualifier = new beans.LTextField();
		combotextqualifier = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        valueSeparator = new beans.LTextField();
		combovalueseparator = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        nameMask1 = new beans.LTextField();
        jLabel13 = new javax.swing.JLabel();
        nameMask2 = new beans.LTextField();
        jLabel14 = new javax.swing.JLabel();
        nameMask3 = new beans.LTextField();
        jLabel15 = new javax.swing.JLabel();
        nameMask4 = new beans.LTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        dateFormat = new beans.LTextField();
        jLabel8 = new javax.swing.JLabel();
        missingDate = new beans.LTextField();
        jLabel9 = new javax.swing.JLabel();
        missingYear = new beans.LTextField();
        jLabel10 = new javax.swing.JLabel();
        missingMonth = new beans.LTextField();
        jLabel11 = new javax.swing.JLabel();
        missingDay = new beans.LTextField();
        exportStatus = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());
        jPanel3.setBorder(new javax.swing.border.EtchedBorder());
 
		delimitersPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        delimitersPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 1, 1, 1)));
        
		jSeparator3.setPreferredSize(new java.awt.Dimension(10, 0));
        
		delimitersPanel.add(jSeparator3);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14));
        jLabel1.setText("Delimiters: ");
        
		delimitersPanel.add(jLabel1);

        delimiterCombo.setEditable(true);
        delimiterCombo.setPreferredSize(new java.awt.Dimension(150, 24));
        delimiterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delimiterComboActionPerformed(evt);
            }
        });

        delimitersPanel.add(delimiterCombo);

        addButton.setFont(new java.awt.Font("Dialog", 0, 12));
        addButton.setIcon(new javax.swing.ImageIcon(""));
        addButton.setText("Add");
        addButton.setToolTipText("");
        addButton.setFocusable(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        delimitersPanel.add(addButton);

        editButton.setFont(new java.awt.Font("Dialog", 0, 12));
        editButton.setIcon(new javax.swing.ImageIcon(""));
        editButton.setText("Edit");
        editButton.setToolTipText("");
        editButton.setFocusable(false);
        editButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editButton.setEnabled(false);
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        delimitersPanel.add(editButton);

        deleteButton.setFont(new java.awt.Font("Dialog", 0, 12));
        deleteButton.setIcon(new javax.swing.ImageIcon(""));
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("");
        deleteButton.setFocusable(false);
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        delimitersPanel.add(deleteButton);

        jPanel3.add(delimitersPanel, new java.awt.GridBagConstraints());

        delimiterDataPanel.setLayout(new java.awt.GridBagLayout());

        delimiterDataPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(20, 20, 20, 20)));
        
		jPanel7.setLayout(new java.awt.GridBagLayout());

        brsCheckBox.setFont(new java.awt.Font("Dialog", 0, 11));
        brsCheckBox.setText("BRS Format");
        brsCheckBox.setToolTipText("Output to .BR2 file with 74 character line length, upper case, no text delimiters.");
        brsCheckBox.setEnabled(false);
        brsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brsCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        
		jPanel7.add(brsCheckBox, gridBagConstraints);

        upperCheckBox.setFont(new java.awt.Font("Dialog", 0, 11));
        upperCheckBox.setText("Upper Case");
        upperCheckBox.setToolTipText("Convert all output to upper case.");
        upperCheckBox.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        
		jPanel7.add(upperCheckBox, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel2.setText("Field Delimiter: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel7.add(jLabel2, gridBagConstraints);

        fieldDelimiter.setColumns(2);
        fieldDelimiter.setMinimumSize(new java.awt.Dimension(29, 25));
        fieldDelimiter.setPreferredSize(new java.awt.Dimension(28, 25));
        fieldDelimiter.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;

		jPanel7.add(fieldDelimiter, gridBagConstraints);
        
		combofielddelimiter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { 
			"33","34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "58", 
			"59","60", "61", "62", "63", "64", "91", "92", "93", "94", "95", "96", "123", "124", "125", 
			"126","161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", 
			"174","175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186",
			"187","188", "189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199",
			"200","201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212",
			"213","214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225",
			"226","227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238",
			"239","240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251",
			"252","253", "254", "255" }));
        combofielddelimiter.setSelectedItem("124");
        combofielddelimiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldDelimiter(evt);
            }
        });
		gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        
		jPanel7.add(combofielddelimiter, gridBagConstraints);
        
		jLabel3.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel3.setText("Text Qualifier: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel7.add(jLabel3, gridBagConstraints);

        textQualifier.setColumns(2);
		textQualifier.setMinimumSize(new java.awt.Dimension(29, 25));
        textQualifier.setPreferredSize(new java.awt.Dimension(28, 25));
        textQualifier.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel7.add(textQualifier, gridBagConstraints);
		
		combotextqualifier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { 
			"33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "58",
			"59", "60", "61", "62", "63", "64", "91", "92", "93", "94", "95", "96", "123", "124", "125",
			"126", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172",
			"174", "175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186",
			"187", "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199",
			"200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", 
			"213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225",
			"226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238",
			"239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", 
			"252", "253", "254", "255" }));
        combotextqualifier.setSelectedItem("126"); 
        combotextqualifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextQualifier(evt);
            }
        });
        
		gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        
		jPanel7.add(combotextqualifier, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel4.setText("Value Separator: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel7.add(jLabel4, gridBagConstraints);

        valueSeparator.setColumns(2);
        valueSeparator.setMinimumSize(new java.awt.Dimension(29, 25));
        valueSeparator.setPreferredSize(new java.awt.Dimension(28, 25));
        valueSeparator.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
       
		jPanel7.add(valueSeparator, gridBagConstraints);
     
	    combovalueseparator.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
			"33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "58", 
			"59", "60", "61", "62", "63", "64", "91", "92", "93", "94", "95", "96", "123", "124", "125",
			"126", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", 
			"174","175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186", 
			"187", "188","189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199",
			"200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", 
			"213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", 
			"226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238",
			"239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251",
			"252", "253", "254", "255" }));
        combovalueseparator.setSelectedItem("59"); 
        combovalueseparator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combovalueseparator(evt);
            }
        });
        
		gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        
		jPanel7.add(combovalueseparator, gridBagConstraints);
        
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.gridx=0;
		gridBagConstraints.gridy=1;
		
		delimiterDataPanel.add(jPanel7, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel12.setText("Name Mask 1: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      
		jPanel1.add(jLabel12, gridBagConstraints);

        nameMask1.setColumns(5);
        nameMask1.setToolTipText(" f = first name\n m = middle initial\n l = last name\n a = affiliation\nFor example:  l\n\t, f\n\t m\n\t (a)  results in Smith, John A (Aacme, Inc.)\n      or\n              \tl\n\t-f\n\t-m  results in Smith-John-A");
        nameMask1.setMinimumSize(new java.awt.Dimension(29, 25));
        nameMask1.setPreferredSize(new java.awt.Dimension(61, 25));
        nameMask1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    
        jPanel1.add(nameMask1, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel13.setText("Name Mask 2: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
       
		jPanel1.add(jLabel13, gridBagConstraints);

        nameMask2.setColumns(5);
        nameMask2.setToolTipText(" f = first name\n m = middle initial\n l = last name\n a = affiliation\nFor example:  l\n\t, f\n\t m\n\t (a)  results in Smith, John A (Aacme, Inc.)\n      or\n              \tl\n\t-f\n\t-m  results in Smith-John-A");
        nameMask2.setMinimumSize(new java.awt.Dimension(29, 25));
        nameMask2.setPreferredSize(new java.awt.Dimension(61, 25));
        nameMask2.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
       
		jPanel1.add(nameMask2, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel14.setText("Name Mask 3: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      
		jPanel1.add(jLabel14, gridBagConstraints);

        nameMask3.setColumns(5);
        nameMask3.setToolTipText(" f = first name\n m = middle initial\n l = last name\n a = affiliation\nFor example:  l\n\t, f\n\t m\n\t (a)  results in Smith, John A (Aacme, Inc.)\n      or\n              \tl\n\t-f\n\t-m  results in Smith-John-A");
        nameMask3.setMinimumSize(new java.awt.Dimension(29, 25));
        nameMask3.setPreferredSize(new java.awt.Dimension(61, 25));
        nameMask3.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      
		jPanel1.add(nameMask3, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel15.setText("Name Mask 4: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
     
		jPanel1.add(jLabel15, gridBagConstraints);

        nameMask4.setColumns(5);
        nameMask4.setToolTipText(" f = first name\n m = middle initial\n l = last name\n a = affiliation\nFor example:  l\n\t, f\n\t m\n\t (a)  results in Smith, John A (Aacme, Inc.)\n      or\n              \tl\n\t-f\n\t-m  results in Smith-John-A");
        nameMask4.setMinimumSize(new java.awt.Dimension(29, 25));
        nameMask4.setPreferredSize(new java.awt.Dimension(61, 25));
        nameMask4.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
     
		jPanel1.add(nameMask4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        gridBagConstraints.gridx=1;
		gridBagConstraints.gridy=1;
		
		delimiterDataPanel.add(jPanel1, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel7.setText("Date Format: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(jLabel7, gridBagConstraints);

        dateFormat.setColumns(8);
        dateFormat.setMinimumSize(new java.awt.Dimension(127, 24));
        dateFormat.setPreferredSize(new java.awt.Dimension(94, 25));
        dateFormat.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(dateFormat, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel8.setText("Missing Date: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(jLabel8, gridBagConstraints);

        missingDate.setColumns(8);
        missingDate.setPreferredSize(new java.awt.Dimension(94, 25));
        missingDate.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(missingDate, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel9.setText("Missing Year: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(jLabel9, gridBagConstraints);

        missingYear.setColumns(4);
        missingYear.setMinimumSize(new java.awt.Dimension(29, 25));
        missingYear.setPreferredSize(new java.awt.Dimension(50, 25));
        missingYear.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(missingYear, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel10.setText("Missing Month:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(jLabel10, gridBagConstraints);

        missingMonth.setColumns(2);
        missingMonth.setMinimumSize(new java.awt.Dimension(29, 25));
        missingMonth.setPreferredSize(new java.awt.Dimension(28, 25));
        missingMonth.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(missingMonth, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel11.setText("Missing Day:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(jLabel11, gridBagConstraints);

        missingDay.setColumns(2);
        missingDay.setMinimumSize(new java.awt.Dimension(29, 25));
        missingDay.setPreferredSize(new java.awt.Dimension(28, 25));
        missingDay.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        
		jPanel16.add(missingDay, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.gridx=2;
		gridBagConstraints.gridy=1;
		
		delimiterDataPanel.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 12;
        
		jPanel3.add(delimiterDataPanel, gridBagConstraints);

        exportStatus.setForeground(new java.awt.Color(204, 0, 51));

		jPanel3.add(exportStatus, new java.awt.GridBagConstraints());

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    private void brsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brsCheckBoxActionPerformed
        if (brsCheckBox.isSelected()) {
            upperCheckBox.setSelected(true);
            upperCheckBox.setEnabled(false);
            nameMask1.setText("l");
            nameMask2.setText("-f");
            nameMask3.setText("-m");
            nameMask4.setText("");
            valueSeparator.setText("; ");
            valueSeparator.setEnabled(false);
            textQualifier.setText("");
            textQualifier.setEnabled(false);
            fieldDelimiter.setText("");
            fieldDelimiter.setEnabled(false);
            
        } else {
            upperCheckBox.setSelected(false);
            upperCheckBox.setEnabled(true);
            valueSeparator.setEnabled(true);
            textQualifier.setEnabled(true);
            fieldDelimiter.setEnabled(true);
            setDefaults();
        }
    }//GEN-LAST:event_brsCheckBoxActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        int selectedOption = JOptionPane.showConfirmDialog(null, "Do you want to delete the delimiter " + (String) delimiterCombo.getEditor().getItem(), "Select an Option", JOptionPane.YES_NO_OPTION);
        if (selectedOption == 0) {
            final int row = delimiterCombo.getSelectedIndex();
            if (row > -1) {
                data = new DelimiterData();
                data.delimiter_set_name = (String) delimiterCombo.getEditor().getItem();
                final ClientTask task = new TaskSendDelimiterData(data);
                task.setCallback(new Runnable() {

                    public void run() {
                        loadDelimiterNames(DEFAULT);
                    }
                });
                task.enqueue(this);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
    private void FieldDelimiter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldDelimiter
        int selectedvalue;
        String value;
        char ascii;
        
        selectedvalue = combofielddelimiter.getSelectedIndex();
            
        Object obj=combofielddelimiter.getItemAt(selectedvalue);
        
         ascii = (char)Integer.parseInt(obj.toString());
         value= String.valueOf(ascii);
         
         fieldDelimiter.setText(value);
    }//GEN-LAST:event_FieldDelimiter

    private void TextQualifier(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextQualifier
        int selectedvalue;
        String value;
        char ascii;
        selectedvalue = combotextqualifier.getSelectedIndex();
        Object obj=combofielddelimiter.getItemAt(selectedvalue);
        
        ascii = (char)Integer.parseInt(obj.toString());
        value= String.valueOf(ascii);
        
        textQualifier.setText(value);
    }//GEN-LAST:event_TextQualifier

    private void combovalueseparator(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combovalueseparator
        int selectedvalue;
        String value;
        char ascii;
        selectedvalue = combovalueseparator.getSelectedIndex();
        Object obj=combofielddelimiter.getItemAt(selectedvalue);
        
        ascii = (char)Integer.parseInt(obj.toString());
        value= String.valueOf(ascii);
        
        valueSeparator.setText(value);
    }//GEN-LAST:event_combovalueseparator
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        DelimiterData data = getDelimiterData(false);
        DelimiterDialog dialog = new DelimiterDialog(null, data);
        dialog.setVisible(true);
        // get the updated data
        DelimiterData newData = dialog.getData();
        if (newData != null) {
            data = newData;
            loadDelimiterNames(data.delimiter_set_name);
            loadDelimiterData(data.delimiter_set_name);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * Enqueue a <code>client.ClientTask</code> to retreive the names
     * of delimiter data sets from the server.
     * @param name the name of the delimiter set to be selected
     * following loading of the delimiter combo in
     * <code>loadDelimitersEntry</code>
     */
    protected void loadDelimiterNames(final String name) {
        final ClientTask task = new TaskExecuteQuery("ExportPage.get export data");
        task.setCallback(new Runnable() {
                public void run() {
                    loadDelimitersEntry((ResultSet)task.getResult(), name);
                }
            });
        task.enqueue(this);
    }

    private void loadDelimitersEntry(ResultSet rs, String name) {
        //Log.print("(ExportPage.loadDelimitersEntry)");
        exportModel = new DefaultComboBoxModel();
        addDelimiterItem(DEFAULT); // to allow no selection
        try {
            while (rs.next()) {
                addDelimiterItem(rs.getString(1));
            }
        } catch (SQLException e) {
            Log.quit(e);
        }
        delimiterCombo.setModel(exportModel);
        delimiterCombo.setSelectedItem(name);
    }

    private void addDelimiterItem(String str) {
        if (exportModel.getSize() < 1) {
            exportModel.addElement(str);
            return;
        }
        for (int i = 0; i < exportModel.getSize(); i++) {
            int newPosition = exportModel.getSize();
            while (newPosition > 0 && str.compareToIgnoreCase((String)exportModel.getElementAt(newPosition-1)) <= 0) {
                newPosition--;
            }
            if ( newPosition < exportModel.getSize() && str.equalsIgnoreCase((String) exportModel.getElementAt(newPosition))) {
                // element matches existing item; replace existing item (for change in capitalization)
                exportModel.removeElementAt(newPosition);
                exportModel.insertElementAt(str, newPosition);
            } else {
                // add element to list
                exportModel.insertElementAt(str, newPosition);
            }
        }
    }

    private void delimiterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delimiterComboActionPerformed
        loadDelimiterData((String)delimiterCombo.getEditor().getItem());
    }//GEN-LAST:event_delimiterComboActionPerformed

    private void loadDelimiterData(String name) {
        if (! name.equals(DEFAULT)) {
            final ClientTask task = new TaskExecuteQuery("ExportPage.get export delimiters"
                                                         , name);
            task.setCallback(new Runnable() {
                    public void run() {
                        setDelimitersEntry((ResultSet)task.getResult());
                    }
                });
            task.enqueue(this);
            editButton.setEnabled(true);
            deleteButton.setEnabled(true);
        } else {
            setDefaults();
        }
    }

    private void setDefaults() {
        fieldDelimiter.setText("|");
        textQualifier.setText("~"); 
        valueSeparator.setText("; ");
        nameMask1.setText("l");
        nameMask2.setText(", f");
        nameMask3.setText(" m");
        nameMask4.setText(" / a");
        dateFormat.setText("yyyyMMdd");
        missingDate.setText("00000000");
        missingYear.setText("0000");
        missingMonth.setText("00");
        missingDay.setText("00");
        brsCheckBox.setSelected(false);
        upperCheckBox.setSelected(false);
        
        editButton.setEnabled(false);
        deleteButton.setEnabled(false);
    }

    private void setDelimitersEntry(ResultSet rs) {
        try {
            while (rs.next()) {
                upperCheckBox.setSelected(rs.getString(2).equals("Yes") ? true : false);
                fieldDelimiter.setText(rs.getString(4));
                textQualifier.setText(rs.getString(5)); 
                valueSeparator.setText(rs.getString(6));
                nameMask1.setText(rs.getString(13));
                nameMask2.setText(rs.getString(14));
                nameMask3.setText(rs.getString(15));
                nameMask4.setText(rs.getString(16));
                dateFormat.setText(rs.getString(7));
                missingDate.setText(rs.getString(8));
                missingYear.setText(rs.getString(9));
                missingMonth.setText(rs.getString(10));
                missingDay.setText(rs.getString(11));
                brsCheckBox.setSelected(rs.getString(17).equals("Yes") ? true : false);
            }
        } catch (SQLException e) {
            Log.quit(e);
        }
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //Log.print("(DelimiterPanel.addButton)");
        data = getDelimiterData(false);
        data.delimiter_set_name = "";
        DelimiterDialog dialog = new DelimiterDialog(null, data);
        dialog.setVisible(true);
        // get the updated data
        DelimiterData newData = dialog.getData();
        if (newData != null) {
            loadDelimiterNames(newData.delimiter_set_name);
            // if user canceled, keep the old data, else get the new
            data = newData;
        }
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * Create an instance of <code>common.DelimiterData</code> to
     * return the data showing on the screen.
     * @return an instance of the data on the screen
     */
    protected DelimiterData getDelimiterData(boolean isExport) {
        if(isExport){
            data = new ExportData();
        }else{
            data = new DelimiterData();
        }
        data.delimiter_set_name = (String)delimiterCombo.getEditor().getItem();
        data.field_delimiter = fieldDelimiter.getText();
        data.text_qualifier = textQualifier.getText();
        data.value_separator = valueSeparator.getText();
        data.name_mask1 = nameMask1.getText();
        data.name_mask2 = nameMask2.getText();
        data.name_mask3 = nameMask3.getText();
        data.name_mask4 = nameMask4.getText();
        data.date_format = dateFormat.getText();
        data.missing_date = missingDate.getText();
        data.missing_year = missingYear.getText();
        data.missing_month = missingMonth.getText();
        data.missing_day = missingDay.getText();
        data.missing_date_character = missingDate.getText();
        data.uppercase_names = "No";
        data.uppercase = upperCheckBox.isSelected() ? "Yes" : "No";
        data.force = "No";
        data.brs_format = brsCheckBox.isSelected() ? "Yes" : "No";        
        return data;
    }

    /**
     * Set the buttons on the screen to show or not.
     * @param show true to show the buttons, false to not show them
     */
    public void showButtons(boolean show) {
        addButton.setVisible(show);
        addButton.setFocusable(show);
        editButton.setVisible(show);
        editButton.setFocusable(show);
        deleteButton.setVisible(show);
        deleteButton.setFocusable(show);
    }

    /**
     * Return the instance of <code>common.DelimiterData</code>.
     * @return the data showing on the screen
     */
    public DelimiterData getData() {
        return data;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox brsCheckBox;
    private beans.LTextField dateFormat;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox delimiterCombo;
    private javax.swing.JPanel delimiterDataPanel;
    private javax.swing.JPanel delimitersPanel;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel exportStatus;
	private javax.swing.JComboBox combofielddelimiter;
    private javax.swing.JComboBox combotextqualifier;
    private javax.swing.JComboBox combovalueseparator;
    private beans.LTextField fieldDelimiter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator3;
    private beans.LTextField missingDate;
    private beans.LTextField missingDay;
    private beans.LTextField missingMonth;
    private beans.LTextField missingYear;
    private beans.LTextField nameMask1;
    private beans.LTextField nameMask2;
    private beans.LTextField nameMask3;
    private beans.LTextField nameMask4;
    private beans.LTextField textQualifier;
    private javax.swing.JCheckBox upperCheckBox;
    private beans.LTextField valueSeparator;
    // End of variables declaration//GEN-END:variables
    
}
