/*
 * NormalizeValuesDialog.java
 *
 * Created on January 7, 2005, 8:28 AM
 */
package beans;

import common.Log;

import java.awt.Component;
import java.awt.Toolkit;

import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 * The user clicked Normalize from beans.SweepTablevalue, so this class
 * is a dialog that starts with the old data and allows the user to enter the
 * new data.
 * @author  Nancy McCall
 */
public class NormalizeValuesDialog extends javax.swing.JDialog {

    private String table = "";
    private String oldValue = "";
    private String newValue = "";
    private String project = "";
    private String type = "";

    /** 
     * Creates new form NormalizeValuesDialog.
     * @param parent the component to use in positioning this dialog
     * @param type "name" or "text"
     * @param oldValue the existing value that the user wants to normalize
     * @param project the selected project.project_name
     * @param table the selected table.table_name
     */
    public NormalizeValuesDialog(Component parent, String type, String oldValue, String project, String table) {
        super(JOptionPane.getFrameForComponent(parent));
        this.type = type;
        this.oldValue = oldValue;
        this.table = table;
        this.project = project;
        initComponents();

        if (table.equals("")) {
            // TBD: replacing a text value, not a tablevalue
        } else {
            tableText.setText(table);
            if (project == null || project.equals("")) {
                projectText.setText("<All Projects>");
            } else {
                projectText.setText(project);
            }
            valueText.setText(oldValue);
        }

        if (type.equals("text")) {
            dataPanel.remove(dataValuesPanel);
            newValueText.setText(oldValue);
        } else {
            dataPanel.remove(newValueLabel);
            dataPanel.remove(newValueText);
            parseOldValue(oldValue);
        }
        getRootPane().setDefaultButton(okButton);

        pack();
    }

    /**
     * Split oldValue into the ibase name fields.
     * @param nameData - a name string provided to NormalizeValuesDialog
     * by SweepTablevalue.java
     */
    private void parseOldValue(String nameData) {
        int slashPos = nameData.lastIndexOf('/');
        // If no name, discard the slash - use org as name
        if (slashPos == 0) {
            nameData = nameData.substring(1).trim();
            slashPos = -1;
        }
        if (slashPos >= 0) {
            if (slashPos < nameData.length()) {
                affiliationText.setText(nameData.substring(slashPos + 1).trim());
            }
            nameData = nameData.substring(0, slashPos).trim();
        }
        int commaPos = nameData.indexOf(",");
        if (commaPos == 0) {
            nameData = nameData.substring(1).trim();
            commaPos = -1;
        }
        if (commaPos < 0) {
            lnameText.setText(nameData);
        } else {
            lnameText.setText(nameData.substring(0, commaPos).trim());
            nameData = nameData.substring(commaPos + 1).trim();
            int spacePos = nameData.lastIndexOf(' ');
            if (spacePos < 0) {
                fnameText.setText(nameData.trim());
            } else {
                fnameText.setText(nameData.substring(0, spacePos).trim());
                mnameText.setText(nameData.substring(spacePos + 1).trim());
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        dataPanel = new javax.swing.JPanel();
        projectLabel = new javax.swing.JLabel();
        projectText = new javax.swing.JTextField();
        tableLabel = new javax.swing.JLabel();
        tableText = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        valueText = new javax.swing.JTextField();
        newValueLabel = new javax.swing.JLabel();
        newValueText = new javax.swing.JTextField();
        dataValuesPanel = new javax.swing.JPanel();
        namePane = new javax.swing.JPanel();
        fnameLabel = new javax.swing.JLabel();
        fnameText = new javax.swing.JTextField();
        mnameLabel = new javax.swing.JLabel();
        mnameText = new javax.swing.JTextField();
        lnameLabel = new javax.swing.JLabel();
        lnameText = new javax.swing.JTextField();
        affiliationLabel = new javax.swing.JLabel();
        affiliationText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle("Normalize");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        dataPanel.setLayout(new java.awt.GridBagLayout());

        dataPanel.setMinimumSize(new java.awt.Dimension(416, 182));
        dataPanel.setPreferredSize(new java.awt.Dimension(536, 272));
        projectLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        projectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        projectLabel.setText("Project:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(projectLabel, gridBagConstraints);

        projectText.setColumns(40);
        projectText.setEditable(false);
        projectText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        projectText.setMinimumSize(new java.awt.Dimension(344, 20));
        projectText.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(projectText, gridBagConstraints);

        tableLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        tableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableLabel.setText("Table:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(tableLabel, gridBagConstraints);

        tableText.setColumns(40);
        tableText.setEditable(false);
        tableText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tableText.setMinimumSize(new java.awt.Dimension(344, 20));
        tableText.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(tableText, gridBagConstraints);

        valueLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        valueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        valueLabel.setText("Value:  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(valueLabel, gridBagConstraints);

        valueText.setColumns(40);
        valueText.setEditable(false);
        valueText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        valueText.setMinimumSize(new java.awt.Dimension(344, 20));
        valueText.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(valueText, gridBagConstraints);

        newValueLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        newValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newValueLabel.setText("Change To: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(newValueLabel, gridBagConstraints);

        newValueText.setColumns(128);
        newValueText.setDocument(new CheckOkDocument());
        newValueText.setMinimumSize(new java.awt.Dimension(344, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataPanel.add(newValueText, gridBagConstraints);

        dataValuesPanel.setLayout(new java.awt.GridBagLayout());

        dataValuesPanel.setBorder(new javax.swing.border.TitledBorder(null, "Change To", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11)));
        namePane.setLayout(new java.awt.GridBagLayout());

        fnameLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        fnameLabel.setLabelFor(fnameText);
        fnameLabel.setText("First Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        namePane.add(fnameLabel, gridBagConstraints);

        fnameText.setColumns(128);
        fnameText.setDocument(new CheckOkDocument());
        fnameText.setMinimumSize(new java.awt.Dimension(344, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        namePane.add(fnameText, gridBagConstraints);

        mnameLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        mnameLabel.setLabelFor(mnameText);
        mnameLabel.setText("Middle Initial: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        namePane.add(mnameLabel, gridBagConstraints);

        mnameText.setColumns(4);
        mnameText.setDocument(new CheckOkDocument());
        mnameText.setMinimumSize(new java.awt.Dimension(344, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        namePane.add(mnameText, gridBagConstraints);

        lnameLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        lnameLabel.setLabelFor(lnameText);
        lnameLabel.setText("Last Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        namePane.add(lnameLabel, gridBagConstraints);

        lnameText.setColumns(128);
        lnameText.setDocument(new CheckOkDocument());
        lnameText.setMinimumSize(new java.awt.Dimension(344, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        namePane.add(lnameText, gridBagConstraints);

        affiliationLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        affiliationLabel.setLabelFor(affiliationText);
        affiliationLabel.setText("Affiliation: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        namePane.add(affiliationLabel, gridBagConstraints);

        affiliationText.setColumns(128);
        affiliationText.setDocument(new CheckOkDocument());
        affiliationText.setMinimumSize(new java.awt.Dimension(344, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        namePane.add(affiliationText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        dataValuesPanel.add(namePane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        dataPanel.add(dataValuesPanel, gridBagConstraints);

        getContentPane().add(dataPanel, java.awt.BorderLayout.CENTER);

        okButton.setMnemonic('O');
        okButton.setText("OK");
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel2.add(okButton);

        cancelButton.setMnemonic('C');
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel2.add(cancelButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        newValue = "";
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (type.equals("text")) {
            newValue = newValueText.getText();
        } else {
            // name
            String f = fnameText.getText().trim();
            String m = mnameText.getText().trim();
            String l = lnameText.getText().trim();
            String o = affiliationText.getText().trim();
            if (!l.equals("") && !m.equals("") && !f.equals("")) {
                // last, first middle
                newValue = l + ", " + f + " " + m;
            } else if (!l.equals("") && !f.equals("")) {
                // last, first
                newValue = l + ", " + f;
            } else if (!l.equals("") && !m.equals("")) {
                // last middle
                newValue = l + " " + m;
            } else if (!l.equals("")) {
                // last
                newValue = l;
            } else if (!f.equals("") && !m.equals("")) {
                // middle first
                newValue = m + " " + f;
            } else if (!f.equals("")) {
                // first
                newValue = f;
            }
            if (newValue == null || newValue.equals("")) {
                newValue = o;
            } else if (!o.equals("")) {
                newValue = newValue.trim() + " / " + o;
            }
        }
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * After verifying that the user wants to normalize the value by
     * replacing all occurrances of oldValue with newValue, return
     * the user's data to the caller.
     * @return a string containing the new value entered by the user
     * or an empty string.
     */
    public String getSelection() {
        if (!newValue.equals("") && !newValue.trim().equals(oldValue.trim())) {
            Toolkit.getDefaultToolkit().beep();
            Object[] options = {"Yes", "No"};
            int ok = JOptionPane.showOptionDialog(this,
                    "Do you want to change all occurrences of \'" + oldValue + "\' to \'" + newValue + "\' in " + projectText.getText() + "?",
                    "Normalize Verification",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);
            if (ok == JOptionPane.OK_OPTION) {
                Log.print("NormalizeValuesDialog.getSelection from " + oldValue + " to " + newValue + " in " + projectText.getText());
                return newValue;
            }
        }
        return "";
    }

    /**
     * If the user inserts or removes text, enable the okButton.
     */
    class CheckOkDocument extends PlainDocument {

        public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
            super.insertString(offs, str, a);
            okButton.setEnabled(true);
        }

        public void remove(int offs, int len) throws BadLocationException {
            super.remove(offs, len);
            okButton.setEnabled(true);
        }
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel affiliationLabel;
    private javax.swing.JTextField affiliationText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel dataValuesPanel;
    private javax.swing.JLabel fnameLabel;
    private javax.swing.JTextField fnameText;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lnameLabel;
    private javax.swing.JTextField lnameText;
    private javax.swing.JLabel mnameLabel;
    private javax.swing.JTextField mnameText;
    private javax.swing.JPanel namePane;
    private javax.swing.JLabel newValueLabel;
    private javax.swing.JTextField newValueText;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel projectLabel;
    private javax.swing.JTextField projectText;
    private javax.swing.JLabel tableLabel;
    private javax.swing.JTextField tableText;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTextField valueText;
    // End of variables declaration//GEN-END:variables
}
