/* $Header: /home/common/cvsarea/ibase/dia/src/beans/DocsPerBatchDialog.java,v 1.7.6.1 2006/02/22 20:05:51 nancy Exp $ */
/*
 * DocsPerBatchDialog.java
 *
 * Created on December 18, 2003, 11:58 AM
 */
package beans;

import java.beans.PropertyChangeListener;
import javax.swing.JOptionPane;

/**
 * Called by <code>SplitPaneViewer</code>, this dialog allows the user to
 * specify the number of documents to put in each Coding batch from the
 * currently-selected Unitize Complete batch.
 * @author  Nancy
 */
public class DocsPerBatchDialog extends javax.swing.JDialog {

    boolean cancelButtonWasSelected = false;

    /**
     * Creates new form DocsPerBatchDialog.
     * @param parent the component to use in positioning this dialog
     */
    public DocsPerBatchDialog(java.awt.Component parent) {
        super(JOptionPane.getFrameForComponent(parent), true);
        initComponents();

        okButton.setEnabled(false);
        this.getRootPane().setDefaultButton(okButton);

        docsPerBatch.addPropertyChangeListener("text", new PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                if (docsPerBatch.getValue() == 0) {
                    okButton.setEnabled(false);
                } else {
                    okButton.setEnabled(true);
                    okButton.setSelected(true);
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        docsPerBatch = new beans.LIntegerField();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Create Coding Batches");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setText("Documents Per Coding Batch: ");
        jLabel1.setFocusable(false);
        jPanel2.add(jLabel1);

        docsPerBatch.setColumns(3);
        jPanel2.add(docsPerBatch);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        getContentPane().add(jPanel2, gridBagConstraints);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel1.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel1.add(cancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancelButtonWasSelected = true;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * Returns the value entered by the user to the caller.
     * @return the int number of documents the user requested per batch
     */
    public int getValue() {
        if (cancelButtonWasSelected) {
            return -1;
        }
        return Integer.parseInt(docsPerBatch.getText());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private beans.LIntegerField docsPerBatch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
