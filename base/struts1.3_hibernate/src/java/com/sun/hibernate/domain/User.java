package com.sun.hibernate.domain;
// Generated Jan 10, 2010 11:27:38 AM by Hibernate Tools 3.2.1.GA

import com.sun.hibernate.Dao.RoleDAO;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * UserDetails generated by hbm2java
 */
public class User extends Domain {

    private Integer userId;
    private Integer purchaserContractId; 
    private String title;    
    private Set<Role> roles;    
    private Set<Transaction> transaction;

    public User() {
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }
    
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Integer getPurchaserContractId() {
        return purchaserContractId;
    }

    public void setPurchaserContractId(Integer purchaserContractId) {
        this.purchaserContractId = purchaserContractId;
    }
    public Set<Transaction> getTransaction() {
        return transaction;
    }

    public void setTransaction(Set<Transaction> transaction) {
        this.transaction = transaction;
    }

   public void addTransaction(Transaction tran){
       if(null == transaction){
           transaction = new HashSet<Transaction>();
       }
       transaction.add(tran);
   }
   public void removeTransaction(Transaction tran){
       transaction.remove(tran);
   }

    public Set<Role> getRoles() {
        return roles;
    }

    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }
   
    public void addRole(Role role) {
        if (roles == null) {
            roles = new HashSet<Role>();
        }
        roles.add(role);
    }

    public boolean hasRole(Role.Roles roleName) {
        Role _role = new Role(roleName.toString());
        return hasRole(_role);
    }

    public boolean hasRole(Role role) {
        if (roles != null) {
            return roles.contains(role);
        } else {
            return false;
        }
    }

    public void addRole(Role.Roles roleName) {
        Role _role = new Role();
        List list = new RoleDAO().findByProperty("name", roleName.toString(), Role.class);
        if (list != null && !list.isEmpty()) {
            _role = (Role) list.get(0);
        }
        addRole(_role);
    }

    
}


